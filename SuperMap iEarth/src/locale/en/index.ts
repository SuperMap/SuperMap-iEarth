
const global = {

  /**
   * UI界面
   * */

  // header 页头
  earth3D: '3D Earth',
  control: 'Control board',
  control_title: 'IEarth control board',
  save: 'Save',
  close: 'Close',
  share: 'Share',
  loginPlease: 'Please log in',
  tourists: 'Tourists',

  // 保存面板
  sceneSave: 'SceneSave',
  saveDate: 'SaveDate',
  sceneName: 'SceneName',
  sceneLable: 'SceneLable',
  authorName: 'AuthorName',
  sceneDescribe: 'SceneDescribe',
  placeHolder: 'P[lease input info',
  sceneSaveNameCannotBeNull: 'Save scene name cannot be empty!',
  sceneSaveLableCannotBeNull: 'Save scene lable cannot be empty!',
  saveErrorNeedOnline: 'Storage failed, please log in to your iPortal or Online account first......',
  saveSuccess: 'Scene saved successfully!',
  saveUpdate: 'Scene update successful!',

  // widgets 组件列表
  w_search: 'Search',
  w_north: 'North',
  w_reset: 'Reset',
  w_zoomOut: 'ZoomOut',
  w_zoomIn: 'ZoomIn',
  w_fullScreen: 'FullScreen',
  w_home: 'Home',

  // toolBar 侧边栏
  t_layerList: 'Layer List',
  t_addData: 'Add Data',
  t_analyse3d: 'Analyse 3D',
  t_measure: 'Measure',
  t_sceneProperties: 'Scene Properties',
  t_objectPainting: 'Object Painting',


  // 面板-header
  layerList: 'Layer List',
  addData: 'Add Data',
  analyseSeries: 'Analyse 3D',
  sceneProperties: 'Scene Properties',
  measure: 'Measure',
  objectPainting: 'Object Painting',
  layerOpration: 'Opration',
  layerAttribute: 'Attribute',
  layerStyle: 'Style',
  layerQuery: 'Query',
  mapQuery: 'Map',

  // 操作面板 - 添加数据
  publicService: "PublicService",
  customService: "CustomService",
  onlineBaseMap: "BaseMap",
  onlineTerrain: "Terrain",
  portalService: "MyServer",

  // 操作面板-三维分析
  clip: 'Clip', // 内嵌
  terrain: 'Terrain',
  analysis3d: '3D-analysis',
  spatialAnalysis: 'Spatial analysis',

  // 三维分析
  Intervisibility: 'Visibility',
  viewableRange: 'Viewshed',
  ligShadowAnalysisth: 'Shadow',
  profile: 'Profile',
  Skyline: 'Skyline',
  FacePlot: 'Plot',

  // 裁剪
  boxClip: 'Box',
  planeClip: 'Plane',
  crossClip: 'Cross',
  polygonClip: 'Polygon',
  clipMode: 'Clip mode',
  inner: 'Inner',
  outer: 'Outer',
  boxclipTip: 'Click the left mouse button to draw the bottom of the box, move the mouse to draw the height of the box, and click the right mouse button to end the drawing',
  displayCilpPlane: 'Display clip plane',
  verticalNormal: 'Vertical normal',
  parallelNormal: 'Parallel normal',
  clipWidth: 'Clip width',
  clipHeight: 'Clip height',
  rotateX: 'Rotate  X-axis',
  rotateY: 'Rotate  Y-axis',
  rotateZ: 'Rotate  Z-axis',

  // 地形操作
  terrainOperation: 'Operation',
  inundationAnalysis: 'Inundation',
  slopeAspect: 'Slope',
  Isoline: 'Isoline',
  terrainExcavate: 'Excavate',
  terrainChange: 'Flatten',
  excavationDepth: 'Depth',
  excavateAreaOffsetUp: 'Move up',
  upHeight: 'Height moved up',
  editArea: 'Edit area',
  editAreaZ: 'Edit Z-axis of area',
  stkUnsupported:'STK terrain not currently supported',
  maximumVisibleElevation: 'Max visible EL',
  minimumVisibleElevation: 'Min visible EL',
  currentElevation: 'Current elevation',
  transparency: 'Transparency',
  inundationSpeed: 'Inundation speed',
  analysisArea: 'AnalysisArea',
  minSlope: 'MinSlope',
  maxSlope: 'MaxSlope',
  displayMode: 'DisplayMode',
  partRegion: 'Designated region',
  allRegion: 'All regions',
  noRegion: 'No region',
  allDisplay: "Arrow and Face Display",
  arrowDisplay: "Arrow display",
  faceDisplay: "Face display",
  equivalentIsoline: 'Equivalent',
  contourColor: 'Contour Color',
  contourLineFill: 'Contour line Fill',
  contourFaceFill: 'Contour Face Fill',
  contourAllFill: 'Contour line and Face',
  contourNoFill: 'No File',

  //操作面板-量算
  measureMode: 'MeasureMode',
  pickPoint: 'PickPoint',
  contour: 'Contour',
  measureAction: 'Measure',
  mode_space: 'Space Mode',
  mode_ground: 'Ground Mode',
  mode_projection: 'Planar Project',
  measureDistence: 'MeasureDistence',
  measureArea: 'MeasureArea',
  measureHeight: 'MeasureHeight',

  // 操作面板-参数设置
  baseAttribute: 'Attribute',
  flying: 'Flying',
  ligth: 'Light',
  viewPorts: 'ViewPorts',
  speciallyEffect: 'SpecialEffects',

  //操作面板-场景属性-勾选
  earth: 'Earth',
  sun: 'Sun',
  depthInspection: 'Depth inspection',
  atomsphereRender: 'Atomsphere render',
  fogEffect: 'Fog effect',
  cloudLayer: 'Cloud layer',
  skyBox: 'Sky box',
  timeAxis: 'Time axis',
  displayFrame: 'Display frame',

  //操作面板-场景属性-选项
  brightness: 'Brightness',
  contrastRatio: 'Contrast ratio',
  colorTone: 'Color tone',
  saturation: 'Saturation',
  gamma: 'Gamma',
  showUnderground: 'Show underground',
  surfaceTransparency: 'Surface transparency',
  displayCoordinate: 'Display coordinate',
  coordinateQuery: 'Coordinate query',
  coordinateTip: 'Longitude、Latitude、Elevation',

  //操作面板-飞行
  flyRoute: 'Fly route',
  flyRoute_1: 'Fly route 1',
  import: 'Import',
  displayRoute: 'Display route',
  displayStation: 'Display station',
  rotateByPoint: 'Rotate by point',
  rotateSpeed: 'Rotate speed',
  rotateRepeat: 'Rotate repeat',
  selectStation: 'Select station',
  play: 'Play',
  pause: 'Pause',
  stop: 'Stop',
  flySpeed: 'Fly speed',
  addStation: 'Add station',
  deleteStation: 'Delete station',
  restore: 'Restore',
  importFlyRoute: 'Import fly route',
  createFlyRoute: 'Create fly route',
  addedStops: 'Added Stops',
  downLoad: 'DownLoad',
  addStopSuccess: 'Successfully added Stop',
  atLeastTwoStop: 'At least two nodes are required to save',


  //操作面板-灯光
  symbolLibrary: 'Symbol library',
  lightsourceColor: 'Light color',
  diffusionDistance: 'Diffusion distance',
  lightDecay: 'Light decay',
  lightsourceIntensity: 'Light intensity',
  spotlightRange: 'Spotlight range',
  displayLightmodel: 'Display model',
  displayLightcorrdinate: 'Display corrdinate',
  modelInformation: 'Model information',
  pointLight: 'Point light',
  spotLight: 'Spot light',
  parallelLight: 'Parallel light',
  addSpotLightTip: 'Left click to draw two points to determine the direction of the light source, right click to end',


  //操作面板-视图模式
  viewMode: 'View mode',
  splitscreenModel: 'Split screen model',
  openRollershutter: 'Open roller shutter',
  noneSplitscreen: 'Do not use split screen',
  horizontalSplitscreen: 'Horizontal splitscreen',
  verticalSplitscreen: 'Vertical splitscreen',
  threeViewport: 'Triple viewport',
  fourViewport: 'Squad viewport',
  noneRollershutter: "Do not use rollershutter",
  leftrightRollershutter: 'Left and right rollershutter',
  updownRollershutter: 'Up and down rollershutter',
  customRollershutter: 'Custom rollershutter',
  shieldDirection: 'Shield direction',
  left: 'Left',
  right: 'Right',
  up: 'Up',
  down: 'Down',

  //操作面板-场景特效
  floodLight: 'Floodlight',
  scanLine: 'ScanLine',
  rainSnow: 'Rain&Snow',
  openFloodlight: 'Open floodlight',
  heatMap: 'HeatMap',
  brightnessThreshold: 'Brightness threshold',
  floodlightThreshold: 'Floodlight threshold',
  scanLineTip:'Fix a rectangle at two points',
  scanMode: 'Scan mode',
  scanColor: 'Scan color',
  scanTexture: 'Scan texture',
  scanWidth:'Scan Width',
  scanSpeed:'Scan Speed',
  scanPeriod:'Scan Period',
  customScanDirection: 'Custom scan direction',
  customScanCenter: 'Custom scan center',
  lineShape: 'Line',
  circleShape: 'Circle',
  noneScanTexture: 'Do not use texture',
  lineTexture1: 'Line texture 1',
  lineTexture2: 'Line texture 2',
  lineTexture3: 'Line texture 3',
  ringTexture1: 'Ring texture 1',
  ringTexture2: 'Ring texture 2',
  loopedhexagonTexture: 'Looped hexagon texture',
  addScanLineTip: 'Left click to draw two points to determine the direction of the scan line, right click to end',
  openRain: 'Display rain',
  openSnow: 'Display snow',
  rainAngle: 'Angle of rain',
  rainSpeed: 'Speed of rain',
  snowAngle: 'Angle of snow',
  snowSpeed: 'speed of snow',
  snowDensity: 'Density of snow',


  //通用
  add: 'Add',
  meterSecond: 'm/s',
  meter: 'm',
  second: 's',

  // 操作面板-对象绘制
  drawLine: 'Line',
  drawPolygon: 'Polygon',
  skit: 'Skit',
  particle: 'Particle',
  geometry: 'Geometry',
  drawMode: 'Draw mode',
  lineColor: 'Color of line',
  lineWidth: 'Width of line',
  editLine: 'Edit line',
  editLineZ: 'Edit Z axis of line',
  editZaxis: 'Edit Z axis',
  solidLine: 'Solidline',
  dashedLine: 'Dasheline',
  outline: 'Outline',
  arrowLine: 'Arrowline',
  haloLine: 'Haloline',
  wakeLine: 'Wakeline',
  pureColor: 'Pure',
  grid: 'Grid',
  stripe: 'Stripe',
  polygonColor: 'polygonColor',
  gridLineWidth: 'Width of grid line',
  gridLineNumber: 'Count of grid line',
  unitTransparency: 'Tranparency of unit',
  oddStripColor: 'Color of odd strip',
  evenStripColor: 'Color of even strip',
  stripRepetition: 'Count of strip repetition',
  stripOffset: 'Offset of strip',
  spaceMode: 'Space mode',
  closeGroundMode: 'Close ground',
  closeS3MMode: 'close S3M',
  closeBoth: 'Close ground and objects',
  editLineTip: 'Start adding with the left mouse button, end with the right mouse button, select the object for editing',
  editLineTip2: 'Left click to select the drawing object for editing',
  symbolType: 'Symbol type',
  symbolColor: 'Symbol color',
  addMode: 'Add mode',
  spacing: 'Spacing',
  count: 'Count',
  multiSelection:'Symbol multi-Selection',
  tree: 'Tree',
  facilities: 'Facilities',
  traffic: 'Traffic',
  singleAdd: 'Single addition',
  lineAdd: 'Add along the route',
  AreaAdd: 'Area addition',
  delMode:'Remove mode',
  singleDel:'Remove Single',
  wholeDel:'Remove Whole',
  addSkitTip:'Please select a symbol',
  delSkitTip:'Please click on the added sketch in the scene',
  cylinder: 'Cylinder',
  cube: 'Cube',
  sphere: 'Sphere',
  cone: 'Cone',
  semiMajorAxis: 'Semi-major axis',
  semiMinorAxis: 'Semi-minor axis',
  granularity: 'Granularity',
  rotate: 'Rotate',
  fillMode: 'Fill mode',
  wireframe: 'Wireframe mode',
  width: 'Width',
  length: 'Length',
  height: 'Height',
  distence: "Distence",
  Xradius: 'X-Radius',
  Yradius: 'Y-Radius',
  Zradius: 'Z-Radius',

  // 粒子系统
  fire: 'Fire',
  water: 'Water',
  fireworks: 'Fireworks',
  displayEdit: 'Display Edit',
  parameterSet: 'Parameter Set',
  emitSpeed: 'Emit Speed',
  lifeCycle: 'Life Cycle',
  speedRange: 'Speed Range',
  scaleRange: 'Scale Range',
  emitType: 'Emit Type',
  particleNumber: 'Particle Number',
  particleSize: 'Particle Size',
  gravity: 'Gravity',
  coneEmit: 'Cone Emit',
  sphereEmit: 'Sphere Emit',
  boxEmit: 'Box Emit',

  //按钮
  query: 'Query',

  // 视频投放
  videoFileSet: 'Video Set',
  videoSet: 'Set',
  visibleVideoLine: 'Video Line',
  localVideoPath: 'Please select a video file',
  videoPath: 'Video Path',
  deleteVideo: 'Please delete current video file',

  // 图层列表
  isShow: 'Explicit and implicit',
  rapidLocate: 'Locate',
  remove: 'Remove',
  delUnsupported:'The default base image does not support deletion',
  /**
 * 组件内部界面
 * */

  // 全局
  s3mLayer: 'S3MLayer',
  imgLayer: 'ImgLayer',
  mvtLayer: 'MvtLayer',
  terrainLayer: 'TerrainLayer',
  wmtsLayer: 'WMTSLayer',
  sure: 'Sure',
  cancle: 'Cancle',
  analysis: 'Analysis',
  clear: 'Clear',
  edit: 'Edit',
  color: 'Color',

  // 图层列表-无
  allLayer: 'All Layer',
  deleteLayer: 'Delete Layer',
  defaultTerrain: 'Default Terrain',
  defaultImage: 'Default imagery',
  lnglatMap: 'GRIDIMAGERY',
  unnamedLayer: 'Unnamed Layer',
  stkTerrain: 'STK Terrain',
  unnamedTerrain: 'Unnamed Terrain',
  superMapTerrain: 'SuperMap Terrain',
  tiandituTerrain: 'Tianditu Terrain',
  noTerrain: 'No Terrain',

  // 添加数据
  type: 'Type',
  layer: 'Layer',
  scene: 'Scene',
  localData: 'LocalData',

  address: 'Address',
  name: 'Name',
  addToken: 'Add Token',
  layerUrl: 'Please enter the layer URL',
  layerName: 'Please enter the layer Name',
  localFilePath: 'Choose local .KML file',
  localFilePathFly: 'Choose local .fpf file',
  chooseFile: 'File',
  selectableLayers: 'Selectable Layers',

  urlIsNull: 'Layer URL cannot be empty, please enter URL!',
  urlCheckedsuccess: 'Layer URL verification successful',
  addScpFailed: 'Loading SCP failed. Please check if the network connection status or URL address is correct?',

  // 三维分析-3D
  // 通视分析
  longitude: 'Longitude',
  latitude: 'Latitude',
  elevation: 'Elevation',
  visibleAreaColor: 'VisibleAreaColor',
  invisibleAreaColor: 'InvisibleAreaColor',
  barrierHighlightColor: 'Barrier Color',
  displayBarrier: 'Display Barrier',
  highlightBarrier: 'Highlight Barrier',

  // 可视域分析
  additionalHeight: 'Additional Height',
  horizontalFov: 'Horizontal Fov',
  verticalFov: 'Vertical Fov',
  hintLineColor: 'Tip line Color',
  visibleBody: 'VisibleBody',
  visibleBodyColor: 'VisibleBody Color',
  invisibleBody: 'InvisibleBody',
  hiddenAreaColor: 'InvisibleBody Color',
  viewshedAnimation: 'Animation Viewshed',
  viewshedAnimationTip: 'Draw the model motion path, right-click to end',

  // 阴影分析
  timeInterval: 'TimeInterval',
  space: 'Space',
  bottomHeight: 'BottomHeight',
  stretchingHeight: 'StretchingHeight',
  bodyDisplay: 'BodyDisplay',
  showShadow: 'ShowShadow',
  filterInterval: 'FilterInterval',
  startTime: 'StartTime',
  endTime: 'EndTime',
  ShadowStartTip: 'Play a day long animation of sunlight and shadows',
  ShadowStartTip2: 'Play a year long animation of sunshine and shadows',
  ShadowStopTip: 'Stop Animation',
  DaylightingRate: 'DaylightingRate',
  analyseResult: 'AnalyseResult',

  // 剖面分析
  startLongitude: 'StartLongitude',
  startLatitude: 'StartLatitude',
  startElevation: 'StartElevation',
  endLongitude: 'EndLongitude',
  endLatitude: 'EndLatitude',
  endElevation: 'EndElevation',
  disPlayInfo: 'DisPlayInfo',
  Section: 'Section',
  GPUSection: "GPUSection",

  // 天际线
  DisplayMode: 'DisplayMode',
  AnalysisRadius: 'AnalysisRadius',
  LineWidth: 'LineWidth',
  LineDisplay: 'LineDisplay',
  FaceDisplay: 'FaceDisplay',
  BodyDisplay: 'BodyDisplay',
  SkylineColor: 'SkylineColor',
  SkylineBodyColor: 'SkylineBodyColor',
  ObstacleColor: 'ObstacleColor',
  Display2D: 'Display2D',
  HighlightObstacles: 'HighlightObstacles',
  GlobeNoAnalysis: 'GlobeNoAnalysis',
  drawHeightLimitingBody: 'DrawHeightLimitingBody',
  Skyline2D: 'Skyline2D',
  limitingBody: 'Limiting body',

  // 立面图
  maxHeight: 'MaxHeight',
  maxDistence: 'MaxDistence',
  Draw: "Draw",
  Plot: "Plot",

  // 图层属性
  chooseLayer: 'Choose Layer',
  renderMode: 'Render Mode',
  singleRender: 'Single Render',
  doubleRender: 'Double Render',
  shadowBrightness: 'ShadowBrightness',
  objectHiding: 'ObjectHiding',
  MinVisibleDistance: 'MinVisibleDistance',
  MaxVisibleDistance: 'MaxVisibleDistance',
  multiple: 'Multiple',
  disPlayAll: 'DisPlay All',
  disPlaySelected: 'DisPlay Selected',
  hideSelected: 'Hide Selected',
  noLayer: 'No Layer',

  // 图层风格
  fillStyle: 'Fill Style',
  foreColor: 'Fore Color',
  selectedColor: 'Selected Color',
  selectColorMode: 'Select Color Mode',
  colorMix: 'Mix',
  colorReplace: 'Replace',
  layerTransparency: 'Layer Transparency',
  reset: 'Reset',
  fillBothMode: 'Fill and wireframe',
  attrSaveOk:'Layer attributes saved successfully',

  // 图层操作
  qxModel: 'Excavate&flat',
  offSet: 'OffSet',
  layerColor: 'LayerColor',
  excavate: 'Excavate',
  flatten: 'Flatten',
  onQXModel: 'Only Supports Oblique Photography Of 3D Models',
  offsetMode: 'Offset Mode',
  offsetX: 'OffsetX',
  offsetY: 'OffsetY',
  offsetZ: 'OffsetZ',
  selected: 'Selected',

  // 属性查询
  dataServerUrl: "DataServerUrl",
  dataSourceName: 'SourceName',
  inputServerUrl: 'Please enter the layer data service URL',
  inputSourceName: 'Please enter the corresponding data source for this layer',
  queryResult: 'Query Results',
  inputUrlName: 'Please fill in the data service and corresponding data source required for this layer query',
  bindInfoOK: "Successfully bound, please click on the model to query information",
  hadBind: "This layer is already bound to a data source",
  noData: "There is currently no data available",


  // 地图查询
  mapDataUrl: "MapDataUrl",
  datasetName: "DatasetName",
  attributeList: 'AttributeList',
  listTotal_s:'Attribute table (total',
  listTotal_e:'features)',
  chooseFieldTip:'Select the fields to be filtered',
  filter:'Filter',
  shpQueryTip:'Specify data query (query data must be consistent with the map service coordinate system)',
  clickQuery: 'ClickQuery',
  clearEntityTip:'Clear the shape drawn on the sphere',
  refreshData:'Refresh data',
  mydata:'My data',
  queryPlaceHolder:"Please enter the selection field to filter keywords",
  queryWait: 'Querying, please wait',
  resouceName:'ResouceName',
  resouceType:'ResouceType',
  createTime:'CreateTime',
  mapQueryTip:'Please enter the data service URL and corresponding dataset',
  clickQueryClose:'The click function has been turned off',
  clickQueryCloseTip:'Click with the mouse to obtain element information, right-click to close the selection',
  dataFiltering:'Filtering data...',
  recently:'Recently',
  chooseField:'Select Field',
  filterFiledTip:'Property sheet display field filtering',

  // 我的服务-iportal
  getData: 'Obtaining data, please wait',
  serviceName: 'Name',
  resourceSubType: 'Type',
  updateTime: 'UpdateTime',
  serviceUrl: 'URL',
  year: 'year',
  month: 'month',
  day: 'day',
  yearsAgo: ' yearsAgo',
  monthsAgo: ' monthsAgo',
  weeksAgo: ' weeksAgo',
  daysAgo: ' daysAgo',
  hoursAgo: ' hoursAgo',
  minutesAgo: 'minutesAgo',
  secondsAgo: ' secondsAgo',

  // message
  layerExistMsg: 'This layer already exists, please do not load it again!',
  imgUrlErrorMsg: 'Image service URL error, image loading failed!',
  scpUrlErrorMsg: 'SCP URL address error, S3M layer loading failed!',

  /**
   * 图片资源名称 - 演示
   * */
  BeijingCBD: "BeijingCBD",
  originCBD: "OriginCBD(Test)",
  SophiaChurch: "SophiaChurch",
  MountEverest: "MountEverest",
  BIMBuilding: "BIMBuilding",
  Pointcloud: "Pointcloud",
  Histogram: "Histogram",
  PhotographyModel: "PhotographyModel",
  JingJinMVT: "JingJinMVT",
  ChongqingBaimo: "Chongqing",
  YokohamaBaimo: "Yokohama",
  transformerStation: 'Oil station',

  LocalImage: 'LocalImage',
  BingMap: 'BingMap',
  TIANDITU: 'TIANDITU',
  OSM: 'OSM',
  GRIDIMAGERY: 'GRIDIMAGERY',
  japanStand: 'Japan Standard Map',
  japanPale: 'Japan Light Map',
  japanBlank: 'Japan White Map',
  japanImage: 'Japan Imagery',

  SuperMapOnlineTerrain: 'SuperMap',
  TiandituTerrain: 'Tianditu',
  STKTerrain: 'STK',

  // Tip
  qxModelTip:'This feature only supports oblique photography of 3D models'
}

export default {
  global
}

