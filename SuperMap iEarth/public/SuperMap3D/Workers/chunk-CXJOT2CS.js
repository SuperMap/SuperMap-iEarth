import{a as x}from"./chunk-DJE4Y6OG.js";import{a as N,b as j}from"./chunk-MPSLJKIO.js";import{a as W}from"./chunk-44AFRGCG.js";import{a as T}from"./chunk-UIA2BV6O.js";import{d as S,k as V,l as w}from"./chunk-CJHFPVIB.js";import{b as H}from"./chunk-SSYG2MIY.js";import{a as M}from"./chunk-SRPTWKHW.js";import{b as l}from"./chunk-7TOCOFC3.js";import{a as s}from"./chunk-LBR6REQR.js";import{a as L}from"./chunk-GXFCHGTA.js";import{a as h}from"./chunk-UBHQMGET.js";import{a as p}from"./chunk-PJGSCWXZ.js";import{a as A}from"./chunk-NUC3LT2W.js";var B=new s,g=new s;function F(e){var i=e.center;g=s.multiplyByScalar(e.ellipsoid.geodeticSurfaceNormal(i,g),e.height,g),g=s.add(i,g,g);var t=new S(g,e.semiMajorAxis),a=x.computeEllipsePositions(e,!1,!0).outerPositions,o=h(e.outlineWidth,1);o>1&&a.push(a[0],a[1],a[2]);var n=new T({position:new w({componentDatatype:M.DOUBLE,componentsPerAttribute:3,values:x.raisePositionsToHeight(a,e,!1)})});o>1&&(n.sideness=new w({componentDatatype:M.FLOAT,componentsPerAttribute:2,values:new Float32Array([0,0,0,1,1,1,1,0])}),n.sideness.isInstanceAttribute=!0);for(var u=a.length/3,d=W.createTypedArray(u,u*2),r=0,c=0;c<u;++c)d[r++]=c,d[r++]=(c+1)%u;return{boundingSphere:t,attributes:n,indices:d}}var P=new S,k=new S;function Y(e){var i=e.center,t=e.ellipsoid,a=e.semiMajorAxis,o=s.multiplyByScalar(t.geodeticSurfaceNormal(i,B),e.height,B);P.center=s.add(i,o,P.center),P.radius=a,o=s.multiplyByScalar(t.geodeticSurfaceNormal(i,o),e.extrudedHeight,o),k.center=s.add(i,o,k.center),k.radius=a;var n=x.computeEllipsePositions(e,!1,!0).outerPositions,u=new T({position:new w({componentDatatype:M.DOUBLE,componentsPerAttribute:3,values:x.raisePositionsToHeight(n,e,!0)})});n=u.position.values;var d=S.union(P,k),r=n.length/3;if(A(e.offsetAttribute)){var c=new Uint8Array(r);if(e.offsetAttribute===j.TOP)c=N(c,1,0,r/2);else{var O=e.offsetAttribute===j.NONE?0:1;c=N(c,O)}u.applyOffset=new w({componentDatatype:M.UNSIGNED_BYTE,componentsPerAttribute:1,values:c})}var v=h(e.numberOfVerticalLines,16);v=L.clamp(v,0,r/2);var f=W.createTypedArray(r,r*2+v*2);r/=2;var b=0,m;for(m=0;m<r;++m)f[b++]=m,f[b++]=(m+1)%r,f[b++]=m+r,f[b++]=(m+1)%r+r;var D;if(v>0){var U=Math.min(v,r);D=Math.round(r/U);var R=Math.min(D*v,r);for(m=0;m<R;m+=D)f[b++]=m,f[b++]=m+r}return{boundingSphere:d,attributes:u,indices:f}}function E(e){e=h(e,h.EMPTY_OBJECT);var i=e.center,t=h(e.ellipsoid,l.WGS84),a=e.semiMajorAxis,o=e.semiMinorAxis,n=h(e.granularity,L.RADIANS_PER_DEGREE);if(!A(i))throw new p("center is required.");if(!A(a))throw new p("semiMajorAxis is required.");if(!A(o))throw new p("semiMinorAxis is required.");if(a<o)throw new p("semiMajorAxis must be greater than or equal to the semiMinorAxis.");if(n<=0)throw new p("granularity must be greater than zero.");var u=h(e.height,0),d=h(e.extrudedHeight,u);this._center=s.clone(i),this._semiMajorAxis=a,this._semiMinorAxis=o,this._ellipsoid=l.clone(t),this._rotation=h(e.rotation,0),this._height=Math.max(d,u),this._granularity=n,this._extrudedHeight=Math.min(d,u),this._numberOfVerticalLines=Math.max(h(e.numberOfVerticalLines,16),0),this._offsetAttribute=e.offsetAttribute,this._outlineWidth=h(e.outlineWidth,1),this._workerName="createEllipseOutlineGeometry"}E.packedLength=s.packedLength+l.packedLength+9;E.pack=function(e,i,t){if(!A(e))throw new p("value is required");if(!A(i))throw new p("array is required");return t=h(t,0),s.pack(e._center,i,t),t+=s.packedLength,l.pack(e._ellipsoid,i,t),t+=l.packedLength,i[t++]=e._semiMajorAxis,i[t++]=e._semiMinorAxis,i[t++]=e._rotation,i[t++]=e._height,i[t++]=e._granularity,i[t++]=e._extrudedHeight,i[t++]=e._numberOfVerticalLines,i[t++]=h(e._offsetAttribute,-1),i[t]=e._outlineWidth,i};var q=new s,C=new l,_={center:q,ellipsoid:C,semiMajorAxis:void 0,semiMinorAxis:void 0,rotation:void 0,height:void 0,granularity:void 0,extrudedHeight:void 0,numberOfVerticalLines:void 0,offsetAttribute:void 0,outlineWidth:void 0};E.unpack=function(e,i,t){if(!A(e))throw new p("array is required");i=h(i,0);var a=s.unpack(e,i,q);i+=s.packedLength;var o=l.unpack(e,i,C);i+=l.packedLength;var n=e[i++],u=e[i++],d=e[i++],r=e[i++],c=e[i++],O=e[i++],v=e[i++],f=e[i++],b=e[i];return A(t)?(t._center=s.clone(a,t._center),t._ellipsoid=l.clone(o,t._ellipsoid),t._semiMajorAxis=n,t._semiMinorAxis=u,t._rotation=d,t._height=r,t._granularity=c,t._extrudedHeight=O,t._numberOfVerticalLines=v,t._offsetAttribute=f===-1?void 0:f,t._outlineWidth=b,t):(_.height=r,_.extrudedHeight=O,_.granularity=c,_.rotation=d,_.semiMajorAxis=n,_.semiMinorAxis=u,_.numberOfVerticalLines=v,_.offsetAttribute=f===-1?void 0:f,_.outlineWidth=b,new E(_))};E.createGeometry=function(e){if(!(e._semiMajorAxis<=0||e._semiMinorAxis<=0)){var i=e._height,t=e._extrudedHeight,a=!L.equalsEpsilon(i,t,0,L.EPSILON2);e._center=e._ellipsoid.scaleToGeodeticSurface(e._center,e._center);var o={center:e._center,semiMajorAxis:e._semiMajorAxis,semiMinorAxis:e._semiMinorAxis,ellipsoid:e._ellipsoid,rotation:e._rotation,height:i,granularity:e._granularity,outlineWidth:e._outlineWidth,numberOfVerticalLines:e._numberOfVerticalLines},n;if(a)o.extrudedHeight=t,o.offsetAttribute=e._offsetAttribute,n=Y(o);else if(n=F(o),A(e._offsetAttribute)){var u=n.attributes.position.values.length,d=new Uint8Array(u/3),r=e._offsetAttribute===j.NONE?0:1;N(d,r),n.attributes.applyOffset=new w({componentDatatype:M.UNSIGNED_BYTE,componentsPerAttribute:1,values:d})}return new V({attributes:n.attributes,indices:n.indices,primitiveType:e._outlineWidth>1?H.TRIANGLES:H.LINES,boundingSphere:n.boundingSphere,offsetAttribute:e._offsetAttribute})}};var ae=E;export{ae as a};
