import{a as t}from"./chunk-MMOQDUXZ.js";import{a as E}from"./chunk-J67OD5PY.js";import"./chunk-XYWAVEQ2.js";import{a as D}from"./chunk-SP6GVFX5.js";import"./chunk-6X6ULKRC.js";import"./chunk-REXJO6A6.js";import"./chunk-EUSYH4JF.js";import{a as F}from"./chunk-44AFRGCG.js";import{a as z}from"./chunk-UIA2BV6O.js";import{d as X,k as $,l as J}from"./chunk-CJHFPVIB.js";import"./chunk-NPAFDOYL.js";import{b as Z}from"./chunk-SSYG2MIY.js";import{a as Y}from"./chunk-SRPTWKHW.js";import"./chunk-6S43R6PL.js";import"./chunk-Z4SOZDEW.js";import"./chunk-MX7ZM7WW.js";import"./chunk-EHDXVZQM.js";import"./chunk-NLYLRNUA.js";import{b as w}from"./chunk-7TOCOFC3.js";import"./chunk-ZVKIUA3Y.js";import"./chunk-3HZNWEV7.js";import{a as k}from"./chunk-LBR6REQR.js";import{a as U}from"./chunk-GXFCHGTA.js";import{a as B}from"./chunk-UBHQMGET.js";import"./chunk-EDZQSM3T.js";import{a as P}from"./chunk-PJGSCWXZ.js";import{a as m}from"./chunk-NUC3LT2W.js";import"./chunk-SFC4FDPW.js";function te(o,e,r,i,p,l,v){var s=E.numberOfPoints(o,e,p),n,a=r.red,c=r.green,u=r.blue,T=r.alpha,f=i.red,h=i.green,_=i.blue,V=i.alpha;if(t.equals(r,i)){for(n=0;n<s;n++)l[v++]=t.floatToByte(a),l[v++]=t.floatToByte(c),l[v++]=t.floatToByte(u),l[v++]=t.floatToByte(T);return v}var L=(f-a)/s,b=(h-c)/s,S=(_-u)/s,y=(V-T)/s,d=v;for(n=0;n<s;n++)l[d++]=t.floatToByte(a+n*L),l[d++]=t.floatToByte(c+n*b),l[d++]=t.floatToByte(u+n*S),l[d++]=t.floatToByte(T+n*y);return d}function A(o){o=B(o,B.EMPTY_OBJECT);var e=o.positions,r=o.colors,i=B(o.colorsPerVertex,!1);if(!m(e)||e.length<2)throw new P("At least two positions are required.");if(m(r)&&(i&&r.length<e.length||!i&&r.length<e.length-1))throw new P("colors has an invalid length.");this._positions=e,this._colors=r,this._colorsPerVertex=i,this._arcType=B(o.arcType,D.GEODESIC),this._granularity=B(o.granularity,U.RADIANS_PER_DEGREE),this._ellipsoid=B(o.ellipsoid,w.WGS84),this._workerName="createSimplePolylineGeometry";var p=1+e.length*k.packedLength;p+=m(r)?1+r.length*t.packedLength:1,this.packedLength=p+w.packedLength+3}A.pack=function(o,e,r){if(!m(o))throw new P("value is required");if(!m(e))throw new P("array is required");r=B(r,0);var i,p=o._positions,l=p.length;for(e[r++]=l,i=0;i<l;++i,r+=k.packedLength)k.pack(p[i],e,r);var v=o._colors;for(l=m(v)?v.length:0,e[r++]=l,i=0;i<l;++i,r+=t.packedLength)t.pack(v[i],e,r);return w.pack(o._ellipsoid,e,r),r+=w.packedLength,e[r++]=o._colorsPerVertex?1:0,e[r++]=o._arcType,e[r]=o._granularity,e};A.unpack=function(o,e,r){if(!m(o))throw new P("array is required");e=B(e,0);var i,p=o[e++],l=new Array(p);for(i=0;i<p;++i,e+=k.packedLength)l[i]=k.unpack(o,e);p=o[e++];var v=p>0?new Array(p):void 0;for(i=0;i<p;++i,e+=t.packedLength)v[i]=t.unpack(o,e);var s=w.unpack(o,e);e+=w.packedLength;var n=o[e++]===1,a=o[e++],c=o[e];return m(r)?(r._positions=l,r._colors=v,r._ellipsoid=s,r._colorsPerVertex=n,r._arcType=a,r._granularity=c,r):new A({positions:l,colors:v,ellipsoid:s,colorsPerVertex:n,arcType:a,granularity:c})};var q=new Array(2),N=new Array(2),ie={positions:q,height:N,ellipsoid:void 0,minDistance:void 0,granularity:void 0};A.createGeometry=function(o){var e=o._positions,r=o._colors,i=o._colorsPerVertex,p=o._arcType,l=o._granularity,v=o._ellipsoid,s=U.chordLength(l,v.maximumRadius),n=m(r)&&!i,a,c=e.length,u,T,f,h,_=0;if(p===D.GEODESIC||p===D.RHUMB){var V,L,b;p===D.GEODESIC?(V=U.chordLength(l,v.maximumRadius),L=E.numberOfPoints,b=E.generateArc):(V=l,L=E.numberOfPointsRhumbLine,b=E.generateRhumbArc);var S=E.extractHeights(e,v),y=ie;if(p===D.GEODESIC?y.minDistance=s:y.granularity=l,y.ellipsoid=v,n){var d=0;for(a=0;a<c-1;a++)d+=L(e[a],e[a+1],V)+1;u=new Float64Array(d*3),f=new Uint8Array(d*4),y.positions=q,y.height=N;var R=0;for(a=0;a<c-1;++a){q[0]=e[a],q[1]=e[a+1],N[0]=S[a],N[1]=S[a+1];var M=b(y);if(m(r)){var x=M.length/3;h=r[a];for(var j=0;j<x;++j)f[R++]=t.floatToByte(h.red),f[R++]=t.floatToByte(h.green),f[R++]=t.floatToByte(h.blue),f[R++]=t.floatToByte(h.alpha)}u.set(M,_),_+=M.length}}else if(y.positions=e,y.height=S,u=new Float64Array(b(y)),m(r)){for(f=new Uint8Array(u.length/3*4),a=0;a<c-1;++a){var I=e[a],ee=e[a+1],re=r[a],oe=r[a+1];_=te(I,ee,re,oe,s,f,_)}var C=r[c-1];f[_++]=t.floatToByte(C.red),f[_++]=t.floatToByte(C.green),f[_++]=t.floatToByte(C.blue),f[_++]=t.floatToByte(C.alpha)}}else{T=n?c*2-2:c,u=new Float64Array(T*3),f=m(r)?new Uint8Array(T*4):void 0;var G=0,g=0;for(a=0;a<c;++a){var K=e[a];if(n&&a>0&&(k.pack(K,u,G),G+=3,h=r[a-1],f[g++]=t.floatToByte(h.red),f[g++]=t.floatToByte(h.green),f[g++]=t.floatToByte(h.blue),f[g++]=t.floatToByte(h.alpha)),n&&a===c-1)break;k.pack(K,u,G),G+=3,m(r)&&(h=r[a],f[g++]=t.floatToByte(h.red),f[g++]=t.floatToByte(h.green),f[g++]=t.floatToByte(h.blue),f[g++]=t.floatToByte(h.alpha))}}var H=new z;H.position=new J({componentDatatype:Y.DOUBLE,componentsPerAttribute:3,values:u}),m(r)&&(H.color=new J({componentDatatype:Y.UNSIGNED_BYTE,componentsPerAttribute:4,values:f,normalize:!0})),T=u.length/3;var ae=(T-1)*2,O=F.createTypedArray(T,ae),Q=0;for(a=0;a<T-1;++a)O[Q++]=a,O[Q++]=a+1;return new $({attributes:H,indices:O,primitiveType:Z.LINES,boundingSphere:X.fromPoints(e)})};var W=A;function le(o,e){return m(e)&&(o=W.unpack(o,e)),o._ellipsoid=w.clone(o._ellipsoid),W.createGeometry(o)}var De=le;export{De as default};
