define(["exports","./buildModuleUrl-9eef8841","./Cartesian2-b72655a5","./Cartesian3-3a8bdb0b","./Cartesian4-72b88c9e","./Cartographic-a2c313d7","./Check-52a7d806","./when-92c6cf3c","./EllipsoidTangentPlane-d6b88a1f","./Math-ecf82623","./FeatureDetection-cec0163f","./Plane-33393da8","./PolygonPipeline-425528b3"],(function(t,e,o,a,n,r,i,s,u,d,c,h,m){"use strict";var l=[];function p(t,e){this.center=a.o.clone(s.u(t,a.o.ZERO)),this.halfAxes=c.p$1.clone(s.u(e,c.p$1.ZERO)),this.areaDirty=1}l[0]={num:0,des:"inside"},l[1]={num:4,data:[0,4,7,3],des:"left"},l[2]={num:4,data:[1,2,6,5],des:"right"},l[3]={num:0},l[4]={num:4,data:[0,1,5,4],des:"bottom"},l[5]={num:6,data:[0,1,5,4,7,3],des:"bottom, left"},l[6]={num:6,data:[0,1,2,6,5,4],des:"bottom, right"},l[7]={num:0},l[8]={num:4,data:[2,3,7,6],des:"top"},l[9]={num:6,data:[4,7,6,2,3,0],des:"top, left"},l[10]={num:6,data:[2,3,7,6,5,1],des:"top, right"},l[11]={num:0},l[12]={num:0},l[13]={num:0},l[14]={num:0},l[15]={num:0},l[16]={num:4,data:[0,3,2,1],des:"front"},l[17]={num:6,data:[0,4,7,3,2,1],des:"front, left"},l[18]={num:6,data:[0,3,2,6,5,1],des:"front, right"},l[19]={num:0},l[20]={num:6,data:[0,3,2,1,5,4],des:"front, bottom"},l[21]={num:6,data:[2,1,5,4,7,3],des:"front, bottom, left"},l[22]={num:6,data:[0,3,2,6,5,4],des:"front, bottom, right"},l[23]={num:0},l[24]={num:6,data:[0,3,7,6,2,1],des:"front, top"},l[25]={num:6,data:[0,4,7,6,2,1],des:"front, top, left"},l[26]={num:6,data:[0,3,7,6,5,1],des:"front, top, right"},l[27]={num:0},l[28]={num:0},l[29]={num:0},l[30]={num:0},l[31]={num:0},l[32]={num:4,data:[4,5,6,7],des:"back"},l[33]={num:6,data:[4,5,6,7,3,0],des:"back, left"},l[34]={num:6,data:[1,2,6,7,4,5],des:"back, right"},l[35]={num:0},l[36]={num:6,data:[0,1,5,6,7,4],des:"back, bottom"},l[37]={num:6,data:[0,1,5,6,7,3],des:"back, bottom, left"},l[38]={num:6,data:[0,1,2,6,7,4],des:"back, bottom, right"},l[39]={num:0},l[40]={num:6,data:[2,3,7,4,5,6],des:"back, top"},l[41]={num:6,data:[0,4,5,6,2,3],des:"back, top, left"},l[42]={num:6,data:[1,2,3,7,4,5],des:"back, top, right"},p.packedLength=a.o.packedLength+c.p$1.packedLength,p.pack=function(t,e,o){return i.o.typeOf.object("value",t),i.o.defined("array",e),o=s.u(o,0),a.o.pack(t.center,e,o),c.p$1.pack(t.halfAxes,e,o+a.o.packedLength),e},p.unpack=function(t,e,o){return i.o.defined("array",t),e=s.u(e,0),s.e(o)||(o=new p),a.o.unpack(t,e,o.center),c.p$1.unpack(t,e+a.o.packedLength,o.halfAxes),o};var w=new a.o,f=new a.o,b=new a.o,x=new a.o,y=new a.o,g=new a.o,M=new c.p$1,v={unitary:new c.p$1,diagonal:new c.p$1},O=new a.o,z=new a.o,$=new a.o;p.fromPoints=function(t,e){if(s.e(e)||(e=new p),!s.e(t)||0===t.length)return e.halfAxes=c.p$1.ZERO,e.center=a.o.ZERO,e;var o,n=t.length,r=a.o.clone(t[0],w);for(o=1;o<n;o++)a.o.add(r,t[o],r);var i=1/n;a.o.multiplyByScalar(r,i,r);var u,d=0,h=0,m=0,l=0,O=0,z=0;for(o=0;o<n;o++)d+=(u=a.o.subtract(t[o],r,f)).x*u.x,h+=u.x*u.y,m+=u.x*u.z,l+=u.y*u.y,O+=u.y*u.z,z+=u.z*u.z;d*=i,h*=i,m*=i,l*=i,O*=i,z*=i;var $=M;$[0]=d,$[1]=h,$[2]=m,$[3]=h,$[4]=l,$[5]=O,$[6]=m,$[7]=O,$[8]=z;var C=c.p$1.computeEigenDecomposition($,v),P=c.p$1.clone(C.unitary,e.halfAxes),A=c.p$1.getColumn(P,0,x),N=c.p$1.getColumn(P,1,y),R=c.p$1.getColumn(P,2,g),T=-Number.MAX_VALUE,E=-Number.MAX_VALUE,I=-Number.MAX_VALUE,L=Number.MAX_VALUE,S=Number.MAX_VALUE,k=Number.MAX_VALUE;for(o=0;o<n;o++)u=t[o],T=Math.max(a.o.dot(A,u),T),E=Math.max(a.o.dot(N,u),E),I=Math.max(a.o.dot(R,u),I),L=Math.min(a.o.dot(A,u),L),S=Math.min(a.o.dot(N,u),S),k=Math.min(a.o.dot(R,u),k);A=a.o.multiplyByScalar(A,.5*(L+T),A),N=a.o.multiplyByScalar(N,.5*(S+E),N),R=a.o.multiplyByScalar(R,.5*(k+I),R);var U=a.o.add(A,N,e.center);a.o.add(U,R,U);var q=b;return q.x=T-L,q.y=E-S,q.z=I-k,a.o.multiplyByScalar(q,.5,q),c.p$1.multiplyByScale(e.halfAxes,q,e.halfAxes),e};var C=new a.o,P=new a.o;function A(t,e,o,n,r,u,d,h,m,l,w){if(!(s.e(r)&&s.e(u)&&s.e(d)&&s.e(h)&&s.e(m)&&s.e(l)))throw new i.t("all extents (minimum/maximum X/Y/Z) are required.");s.e(w)||(w=new p);var f=w.halfAxes;c.p$1.setColumn(f,0,e,f),c.p$1.setColumn(f,1,o,f),c.p$1.setColumn(f,2,n,f);var b=C;b.x=(r+u)/2,b.y=(d+h)/2,b.z=(m+l)/2;var x=P;x.x=(u-r)/2,x.y=(h-d)/2,x.z=(l-m)/2;var y=w.center;return b=c.p$1.multiplyByVector(f,b,b),a.o.add(t,b,y),c.p$1.multiplyByScale(f,x,f),w}var N=new r.a,R=new a.o,T=new r.a,E=new r.a,I=new r.a,L=new r.a,S=new r.a,k=new a.o,U=new a.o,q=new a.o,B=new a.o,_=new a.o,D=new o.o,X=new o.o,V=new o.o,W=new o.o,j=new o.o,Z=new a.o,F=new a.o,G=new a.o,Y=new a.o,H=new o.o,J=new a.o,K=new a.o,Q=new a.o,tt=new h.o(a.o.UNIT_X,0);p.fromRectangle=function(t,e,n,c,m){if(!s.e(t))throw new i.t("rectangle is required");if(t.width<0||t.width>d.e.TWO_PI)throw new i.t("Rectangle width must be between 0 and 2*pi");if(t.height<0||t.height>d.e.PI)throw new i.t("Rectangle height must be between 0 and pi");if(s.e(c)&&!d.e.equalsEpsilon(c.radii.x,c.radii.y,d.e.EPSILON15))throw new i.t("Ellipsoid must be an ellipsoid of revolution (radii.x == radii.y)");var l,p,w,f,b,x,y;if(e=s.u(e,0),n=s.u(n,0),c=s.u(c,o.t.WGS84),t.width<=d.e.PI){var g=o.h.center(t,N),M=c.cartographicToCartesian(g,R),v=new u.f(M,c);y=v.plane;var O=g.longitude,z=t.south<0&&t.north>0?0:g.latitude,$=r.a.fromRadians(O,t.north,n,T),C=r.a.fromRadians(t.west,t.north,n,E),P=r.a.fromRadians(t.west,z,n,I),et=r.a.fromRadians(t.west,t.south,n,L),ot=r.a.fromRadians(O,t.south,n,S),at=c.cartographicToCartesian($,k),nt=c.cartographicToCartesian(C,U),rt=c.cartographicToCartesian(P,q),it=c.cartographicToCartesian(et,B),st=c.cartographicToCartesian(ot,_),ut=v.projectPointToNearestOnPlane(at,D),dt=v.projectPointToNearestOnPlane(nt,X),ct=v.projectPointToNearestOnPlane(rt,V),ht=v.projectPointToNearestOnPlane(it,W),mt=v.projectPointToNearestOnPlane(st,j);return p=-(l=Math.min(dt.x,ct.x,ht.x)),f=Math.max(dt.y,ut.y),w=Math.min(ht.y,mt.y),C.height=et.height=e,nt=c.cartographicToCartesian(C,U),it=c.cartographicToCartesian(et,B),b=Math.min(h.o.getPointDistance(y,nt),h.o.getPointDistance(y,it)),x=n,A(v.origin,v.xAxis,v.yAxis,v.zAxis,l,p,w,f,b,x,m)}var lt=t.south>0,pt=t.north<0,wt=lt?t.south:pt?t.north:0,ft=o.h.center(t,N).longitude,bt=a.o.fromRadians(ft,wt,n,c,Z);bt.z=0;var xt=Math.abs(bt.x)<d.e.EPSILON10&&Math.abs(bt.y)<d.e.EPSILON10?a.o.UNIT_X:a.o.normalize(bt,F),yt=a.o.UNIT_Z,gt=a.o.cross(xt,yt,G);y=h.o.fromPointNormal(bt,xt,tt);var Mt=a.o.fromRadians(ft+d.e.PI_OVER_TWO,wt,n,c,Y);l=-(p=a.o.dot(h.o.projectPointOntoPlane(y,Mt,H),gt)),f=a.o.fromRadians(0,t.north,pt?e:n,c,J).z,w=a.o.fromRadians(0,t.south,lt?e:n,c,K).z;var vt=a.o.fromRadians(t.east,wt,n,c,Q);return A(bt,gt,yt,xt,l,p,w,f,b=h.o.getPointDistance(y,vt),x=0,m)},p.clone=function(t,e){if(s.e(t))return s.e(e)?(a.o.clone(t.center,e.center),c.p$1.clone(t.halfAxes,e.halfAxes),e.areaDirty=1,e):new p(t.center,t.halfAxes)},p.intersectPlane=function(t,o){if(!s.e(t))throw new i.t("box is required.");if(!s.e(o))throw new i.t("plane is required.");var n=t.center,r=o.normal,u=t.halfAxes,d=r.x,h=r.y,m=r.z,l=Math.abs(d*u[c.p$1.COLUMN0ROW0]+h*u[c.p$1.COLUMN0ROW1]+m*u[c.p$1.COLUMN0ROW2])+Math.abs(d*u[c.p$1.COLUMN1ROW0]+h*u[c.p$1.COLUMN1ROW1]+m*u[c.p$1.COLUMN1ROW2])+Math.abs(d*u[c.p$1.COLUMN2ROW0]+h*u[c.p$1.COLUMN2ROW1]+m*u[c.p$1.COLUMN2ROW2]),p=a.o.dot(r,n)+o.distance;return p<=-l?e.S.OUTSIDE:p>=l?e.S.INSIDE:e.S.INTERSECTING};var et=new a.o,ot=new a.o,at=new a.o,nt=new a.o,rt=new a.o;p.distanceSquaredTo=function(t,e){if(!s.e(t))throw new i.t("box is required.");if(!s.e(e))throw new i.t("cartesian is required.");var o=a.o.subtract(e,t.center,C),n=t.halfAxes,r=c.p$1.getColumn(n,0,et),u=c.p$1.getColumn(n,1,ot),d=c.p$1.getColumn(n,2,at),h=a.o.magnitude(r),m=a.o.magnitude(u),l=a.o.magnitude(d);a.o.normalize(r,r),a.o.normalize(u,u),a.o.normalize(d,d);var p=nt;p.x=a.o.dot(o,r),p.y=a.o.dot(o,u),p.z=a.o.dot(o,d);var w,f=0;return p.x<-h?f+=(w=p.x+h)*w:p.x>h&&(f+=(w=p.x-h)*w),p.y<-m?f+=(w=p.y+m)*w:p.y>m&&(f+=(w=p.y-m)*w),p.z<-l?f+=(w=p.z+l)*w:p.z>l&&(f+=(w=p.z-l)*w),f};var it=new a.o,st=new a.o;p.computePlaneDistances=function(t,o,n,r){if(!s.e(t))throw new i.t("box is required.");if(!s.e(o))throw new i.t("position is required.");if(!s.e(n))throw new i.t("direction is required.");s.e(r)||(r=new e.o);var u=Number.POSITIVE_INFINITY,d=Number.NEGATIVE_INFINITY,h=t.center,m=t.halfAxes,l=c.p$1.getColumn(m,0,et),p=c.p$1.getColumn(m,1,ot),w=c.p$1.getColumn(m,2,at),f=a.o.add(l,p,it);a.o.add(f,w,f),a.o.add(f,h,f);var b=a.o.subtract(f,o,st),x=a.o.dot(n,b);return u=Math.min(x,u),d=Math.max(x,d),a.o.add(h,l,f),a.o.add(f,p,f),a.o.subtract(f,w,f),a.o.subtract(f,o,b),x=a.o.dot(n,b),u=Math.min(x,u),d=Math.max(x,d),a.o.add(h,l,f),a.o.subtract(f,p,f),a.o.add(f,w,f),a.o.subtract(f,o,b),x=a.o.dot(n,b),u=Math.min(x,u),d=Math.max(x,d),a.o.add(h,l,f),a.o.subtract(f,p,f),a.o.subtract(f,w,f),a.o.subtract(f,o,b),x=a.o.dot(n,b),u=Math.min(x,u),d=Math.max(x,d),a.o.subtract(h,l,f),a.o.add(f,p,f),a.o.add(f,w,f),a.o.subtract(f,o,b),x=a.o.dot(n,b),u=Math.min(x,u),d=Math.max(x,d),a.o.subtract(h,l,f),a.o.add(f,p,f),a.o.subtract(f,w,f),a.o.subtract(f,o,b),x=a.o.dot(n,b),u=Math.min(x,u),d=Math.max(x,d),a.o.subtract(h,l,f),a.o.subtract(f,p,f),a.o.add(f,w,f),a.o.subtract(f,o,b),x=a.o.dot(n,b),u=Math.min(x,u),d=Math.max(x,d),a.o.subtract(h,l,f),a.o.subtract(f,p,f),a.o.subtract(f,w,f),a.o.subtract(f,o,b),x=a.o.dot(n,b),u=Math.min(x,u),d=Math.max(x,d),r.start=u,r.stop=d,r};var ut=new e.i;p.isOccluded=function(t,o){if(!s.e(t))throw new i.t("box is required.");if(!s.e(o))throw new i.t("occluder is required.");var a=e.i.fromOrientedBoundingBox(t,ut);return!o.isBoundingSphereVisible(a)},p.prototype.intersectPlane=function(t){return p.intersectPlane(this,t)},p.prototype.distanceSquaredTo=function(t){return p.distanceSquaredTo(this,t)},p.prototype.computePlaneDistances=function(t,e,o){return p.computePlaneDistances(this,t,e,o)},p.prototype.isOccluded=function(t){return p.isOccluded(this,t)},p.equals=function(t,e){return t===e||s.e(t)&&s.e(e)&&a.o.equals(t.center,e.center)&&c.p$1.equals(t.halfAxes,e.halfAxes)},p.prototype.clone=function(t){return p.clone(this,t)},p.prototype.equals=function(t){return p.equals(this,t)};var dt=new n.e;p.prototype._updateBBox=function(){if(1==this.areaDirty){var t=c.p$1.getColumn(this.halfAxes,0,et),e=a.o.clone(a.o.negate(t,O)),o=c.p$1.getColumn(this.halfAxes,1,ot),n=a.o.clone(a.o.negate(o,O)),r=c.p$1.getColumn(this.halfAxes,2,at),i=a.o.clone(a.o.negate(r,O));this.bbox=[],a.o.add(this.center,o,O),a.o.add(O,i,z),a.o.add(z,e,$),this.bbox[0]=new a.o($.x,$.y,$.z),a.o.add(z,t,$),this.bbox[1]=new a.o($.x,$.y,$.z),a.o.add(O,r,z),a.o.add(z,t,$),this.bbox[2]=new a.o($.x,$.y,$.z),a.o.add(z,e,$),this.bbox[3]=new a.o($.x,$.y,$.z),a.o.add(this.center,n,O),a.o.add(O,i,z),a.o.add(z,e,$),this.bbox[4]=new a.o($.x,$.y,$.z),a.o.add(z,t,$),this.bbox[5]=new a.o($.x,$.y,$.z),a.o.add(O,r,z),a.o.add(z,t,$),this.bbox[6]=new a.o($.x,$.y,$.z),a.o.add(z,e,$),this.bbox[7]=new a.o($.x,$.y,$.z);var s=a.o.magnitude(t),u=a.o.magnitude(o),d=a.o.magnitude(r),h=new a.o(-s,-u,-d),m=new a.o(s,u,d);if(s*u*d==0)return void(this.areaDirty=-1);a.o.normalize(t,t),a.o.normalize(o,o),a.o.normalize(r,r),this.u=a.o.clone(t),this.v=a.o.clone(o),this.w=a.o.clone(r),this.posMin=h,this.posMaX=m,this.areaDirty=0}};var ct=[];ct.push(new o.o),ct.push(new o.o),ct.push(new o.o),ct.push(new o.o),ct.push(new o.o),ct.push(new o.o);var ht=new r.a,mt=new a.o;p.prototype.calculateBoxArea=function(t,e,o,r,i,u,h,p){this._updateBBox();var w=t,f=a.o.subtract(w,this.center,rt);if(-1==this.areaDirty){var b=i/r*(A=-1!=u?u:.5*a.o.distance(this.posMaX,this.posMin))/o;return d.e.PI*b*b}var x=a.o.fromElements(a.o.dot(f,this.u),a.o.dot(f,this.v),a.o.dot(f,this.w),it),y=(x.x<this.posMin.x?1:0)+((x.x>this.posMaX.x?1:0)<<1)+((x.z<this.posMin.z?1:0)<<2)+((x.z>this.posMaX.z?1:0)<<3)+((x.y>this.posMaX.y?1:0)<<4)+((x.y<this.posMin.y?1:0)<<5);if(y>42)return console.log("area calculation is wrong"),-100;var g=l[y];if(0==g.num){b=i/r*(A=-1!=u?u:.5*a.o.distance(this.posMaX,this.posMin))/o;return d.e.PI*b*b}if(0==g.num)return console.log("area calculation is wrong"),-100;for(var M,v=[],O=h,z=0;z<g.num;z++){var $=ct[z],C=this.bbox[g.data[z]];M=!1;var P,A,N=d.e.PI;if(3===e)(P=c.p.multiplyByVector(O,n.e.fromElements(C.x,C.y,C.z,1),dt)).z<0&&(M=!0,-1==A&&(N=d.e.PI_OVER_FOUR,o=a.o.magnitude(f)));else{var R=p,T=R.ellipsoid.cartesianToCartographic(C,ht);s.e(T)?(R.project(T,mt),(P=c.p.multiplyByVector(O,n.e.fromElements(mt.z,mt.x,mt.y,1),dt)).z<0&&(M=!0)):M=!0}if(1==M)return N*(b=i/r*(A=-1!=u?u:.5*a.o.distance(this.posMaX,this.posMin))/o)*b;$.x=P.x/P.w,$.y=i-P.y/P.w,v.push($)}return Math.abs(m.A.computeArea2D(v))},t.y=p}));
