import{a as L}from"./chunk-RCOGLXPT.js";import"./chunk-I6IKQZ7N.js";import{a as f}from"./chunk-Z53FGVZR.js";import"./chunk-SP6GVFX5.js";import"./chunk-HOZ5IOFP.js";import"./chunk-ZMHH4UFY.js";import{a as G}from"./chunk-D45ASFTR.js";import"./chunk-6X6ULKRC.js";import{a as C}from"./chunk-ONAS2LTV.js";import{a as w}from"./chunk-VI4IWVT4.js";import"./chunk-MQMYX2JZ.js";import"./chunk-KW5QJXXE.js";import"./chunk-REXJO6A6.js";import"./chunk-EUSYH4JF.js";import{a as O}from"./chunk-44AFRGCG.js";import{a as k}from"./chunk-UIA2BV6O.js";import{d as g,k as s,l as b}from"./chunk-CJHFPVIB.js";import"./chunk-NPAFDOYL.js";import{b as H}from"./chunk-SSYG2MIY.js";import{a as P}from"./chunk-SRPTWKHW.js";import"./chunk-6S43R6PL.js";import"./chunk-Z4SOZDEW.js";import"./chunk-MX7ZM7WW.js";import"./chunk-EHDXVZQM.js";import"./chunk-NLYLRNUA.js";import{b as v}from"./chunk-7TOCOFC3.js";import"./chunk-ZVKIUA3Y.js";import"./chunk-3HZNWEV7.js";import{a as h}from"./chunk-LBR6REQR.js";import"./chunk-GXFCHGTA.js";import{a}from"./chunk-UBHQMGET.js";import{a as m}from"./chunk-EDZQSM3T.js";import"./chunk-PJGSCWXZ.js";import{a as u}from"./chunk-NUC3LT2W.js";import"./chunk-SFC4FDPW.js";function _(r){for(var e=r.length,o=new Float64Array(e*3),i=O.createTypedArray(e,e*2),t=0,y=0,n=0;n<e;n++){var c=r[n];o[t++]=c.x,o[t++]=c.y,o[t++]=c.z,i[y++]=n,i[y++]=(n+1)%e}var l=new k({position:new b({componentDatatype:P.DOUBLE,componentsPerAttribute:3,values:o})});return new s({attributes:l,indices:i,primitiveType:H.LINES})}function p(r){r=a(r,a.EMPTY_OBJECT);var e=r.polygonHierarchy;m.defined("options.polygonHierarchy",e),this._polygonHierarchy=e,this._workerName="createCoplanarPolygonOutlineGeometry",this.packedLength=f.computeHierarchyPackedLength(e)+1}p.fromPositions=function(r){r=a(r,a.EMPTY_OBJECT),m.defined("options.positions",r.positions);var e={polygonHierarchy:{positions:r.positions}};return new p(e)};p.pack=function(r,e,o){return m.typeOf.object("value",r),m.defined("array",e),o=a(o,0),o=f.packPolygonHierarchy(r._polygonHierarchy,e,o),e[o]=r.packedLength,e};var E={polygonHierarchy:{}};p.unpack=function(r,e,o){m.defined("array",r),e=a(e,0);var i=f.unpackPolygonHierarchy(r,e);e=i.startingIndex,delete i.startingIndex;var t=r[e];return u(o)||(o=new p(E)),o._polygonHierarchy=i,o.packedLength=t,o};p.createGeometry=function(r){var e=r._polygonHierarchy,o=e.positions;if(o=G(o,h.equalsEpsilon,!0),!(o.length<3)){var i=L.validOutline(o);if(!!i){var t=f.polygonOutlinesFromHierarchy(e,!1);if(t.length!==0){for(var y=[],n=0;n<t.length;n++){var c=new C({geometry:_(t[n])});y.push(c)}var l=w.combineInstances(y)[0],T=g.fromPoints(e.positions);return new s({attributes:l.attributes,indices:l.indices,primitiveType:l.primitiveType,boundingSphere:T})}}}};var d=p;function A(r,e){return u(e)&&(r=d.unpack(r,e)),r._ellipsoid=v.clone(r._ellipsoid),d.createGeometry(r)}var $=A;export{$ as default};
