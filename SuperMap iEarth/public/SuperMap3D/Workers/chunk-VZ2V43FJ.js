import{b as h}from"./chunk-7TOCOFC3.js";import{b as s}from"./chunk-3HZNWEV7.js";import{a as f}from"./chunk-LBR6REQR.js";import{a as p}from"./chunk-GXFCHGTA.js";import{a as d}from"./chunk-UBHQMGET.js";import{a as u}from"./chunk-PJGSCWXZ.js";import{a as n}from"./chunk-NUC3LT2W.js";function t(i){this._ellipsoid=d(i,h.WGS84),this._semimajorAxis=this._ellipsoid.maximumRadius,this._oneOverSemimajorAxis=1/this._semimajorAxis}Object.defineProperties(t.prototype,{ellipsoid:{get:function(){return this._ellipsoid}}});t.mercatorAngleToGeodeticLatitude=function(i){return p.PI_OVER_TWO-2*Math.atan(Math.exp(-i))};t.geodeticLatitudeToMercatorAngle=function(i){i>t.MaximumLatitude?i=t.MaximumLatitude:i<-t.MaximumLatitude&&(i=-t.MaximumLatitude);var e=Math.sin(i);return .5*Math.log((1+e)/(1-e))};t.MaximumLatitude=t.mercatorAngleToGeodeticLatitude(Math.PI);t.prototype.project=function(i,e){var o=this._semimajorAxis,r=i.longitude*o,a=t.geodeticLatitudeToMercatorAngle(i.latitude)*o,m=i.height;return n(e)?(e.x=r,e.y=a,e.z=m,e):new f(r,a,m)};t.prototype.unproject=function(i,e){if(!n(i))throw new u("cartesian is required");var o=this._oneOverSemimajorAxis,r=i.x*o,a=t.mercatorAngleToGeodeticLatitude(i.y*o),m=i.z;return n(e)?(e.longitude=r,e.latitude=a,e.height=m,e):new s(r,a,m)};var j=t;export{j as a};
