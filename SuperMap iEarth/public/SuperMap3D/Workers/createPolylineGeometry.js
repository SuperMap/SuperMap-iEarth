define(["./when-92c6cf3c","./Cartesian2-b72655a5","./ArcType-31298545","./arrayRemoveDuplicates-a6924649","./buildModuleUrl-9eef8841","./Cartesian3-3a8bdb0b","./Color-98063b35","./ComponentDatatype-98414d16","./Check-52a7d806","./GeometryAttribute-f47bd1cb","./GeometryAttributes-7f66ea53","./IndexDatatype-86677ec4","./Math-ecf82623","./PolylinePipeline-f0970409","./FeatureDetection-cec0163f","./VertexFormat-f496a3f1","./Cartographic-a2c313d7","./Event-3390cd7d","./RuntimeError-c6a62a80","./WebGLConstants-42651efd","./Cartesian4-72b88c9e","./EllipsoidGeodesic-03c935a0","./EllipsoidRhumbLine-b1a766ae","./IntersectionTests-6e80d61c","./Plane-33393da8"],(function(e,t,o,r,a,n,i,l,s,c,p,d,u,h,y,f,m,v,w,_,g,b,L,D,E){"use strict";var A=[];function x(e,t,o,r,a){var n=A;n.length=a;var l,s=o.red,c=o.green,p=o.blue,d=o.alpha,u=r.red,h=r.green,y=r.blue,f=r.alpha;if(i.e.equals(o,r)){for(l=0;l<a;l++)n[l]=i.e.clone(o);return n}var m=(u-s)/a,v=(h-c)/a,w=(y-p)/a,_=(f-d)/a;for(l=0;l<a;l++)n[l]=new i.e(s+l*m,c+l*v,p+l*w,d+l*_);return n}function P(r){var l=(r=e.u(r,e.u.EMPTY_OBJECT)).positions,c=r.colors,p=e.u(r.width,1),d=e.u(r.hMax,-1),h=e.u(r.colorsPerVertex,!1);if(!e.e(l)||l.length<2)throw new s.t("At least two positions are required.");if("number"!=typeof p)throw new s.t("width must be a number");if(e.e(c)&&(h&&c.length<l.length||!h&&c.length<l.length-1))throw new s.t("colors has an invalid length.");this._positions=l,this._colors=c,this._width=p,this._hMax=d,this._colorsPerVertex=h,this._dist=r.dist,this._period=r.period,this._vertexFormat=f.n.clone(e.u(r.vertexFormat,f.n.DEFAULT)),this._followSurface=e.u(r.followSurface,!0),e.e(r.followSurface)&&(function(t,o){if(!e.e(t)||!e.e(o))throw new s.t("identifier and message are required.");a.e(t,o)}("PolylineGeometry.followSurface","PolylineGeometry.followSurface is deprecated and will be removed in SuperMap3D. Use PolylineGeometry.arcType instead."),r.arcType=r.followSurface?o.L.GEODESIC:o.L.NONE),this._arcType=e.u(r.arcType,o.L.GEODESIC),this._followSurface=this._arcType!==o.L.NONE,this._granularity=e.u(r.granularity,u.e.RADIANS_PER_DEGREE),this._ellipsoid=t.t.clone(e.u(r.ellipsoid,t.t.WGS84)),this._workerName="createPolylineGeometry";var y=1+l.length*n.o.packedLength;y+=e.e(c)?1+c.length*i.e.packedLength:1,this.packedLength=y+t.t.packedLength+f.n.packedLength+4+2}P.pack=function(o,r,a){if(!e.e(o))throw new s.t("value is required");if(!e.e(r))throw new s.t("array is required");a=e.u(a,0);var l,c=o._positions,p=c.length;for(r[a++]=p,l=0;l<p;++l,a+=n.o.packedLength)n.o.pack(c[l],r,a);var d=o._colors;for(p=e.e(d)?d.length:0,r[a++]=p,l=0;l<p;++l,a+=i.e.packedLength)i.e.pack(d[l],r,a);return t.t.pack(o._ellipsoid,r,a),a+=t.t.packedLength,f.n.pack(o._vertexFormat,r,a),a+=f.n.packedLength,r[a++]=o._width,r[a++]=o._colorsPerVertex?1:0,r[a++]=o._arcType,r[a++]=o._granularity,r[a++]=o._hMax,r[a++]=o._dist,r[a]=o._period,r};var k=t.t.clone(t.t.UNIT_SPHERE),T=new f.n,C={positions:void 0,colors:void 0,ellipsoid:k,vertexFormat:T,width:void 0,colorsPerVertex:void 0,arcType:void 0,granularity:void 0};P.unpack=function(o,r,a){if(!e.e(o))throw new s.t("array is required");r=e.u(r,0);var l,c=o[r++],p=new Array(c);for(l=0;l<c;++l,r+=n.o.packedLength)p[l]=n.o.unpack(o,r);var d=(c=o[r++])>0?new Array(c):void 0;for(l=0;l<c;++l,r+=i.e.packedLength)d[l]=i.e.unpack(o,r);var u=t.t.unpack(o,r,k);r+=t.t.packedLength;var h=f.n.unpack(o,r,T);r+=f.n.packedLength;var y=o[r++],m=1===o[r++],v=o[r++],w=o[r++],_=o[r++],g=1==o[r++],b=o[r];return e.e(a)?(a._positions=p,a._colors=d,a._ellipsoid=t.t.clone(u,a._ellipsoid),a._vertexFormat=f.n.clone(h,a._vertexFormat),a._width=y,a._colorsPerVertex=m,a._arcType=v,a._granularity=w,a._hMax=_,a._dist=g,a._period=b,a):(C.positions=p,C.colors=d,C.width=y,C.colorsPerVertex=m,C.arcType=v,C.granularity=w,C.hMax=_,C.dist=g,C.period=b,new P(C))};var S=new n.o,F=new n.o,G=new n.o,O=new n.o;return P.createGeometry=function(t){var s,f,m,v=t._width,w=t._hMax,_=t._vertexFormat,g=t._colors,b=t._colorsPerVertex,L=t._arcType,D=t._granularity,E=t._ellipsoid,P=t._dist,k=t._period,T=r.D(t._positions,n.o.equalsEpsilon),C=T.length;if(!(C<2||v<=0)){if(L===o.L.GEODESIC||L===o.L.RHUMB){var M,I;L===o.L.GEODESIC?(M=u.e.chordLength(D,E.maximumRadius),I=h.m.numberOfPoints):(M=D,I=h.m.numberOfPointsRhumbLine);var R=h.m.extractHeights(T,E);if(e.e(g)){var N=1;for(s=0;s<C-1;++s)N+=I(T[s],T[s+1],M);var B=new Array(N),U=0;for(s=0;s<C-1;++s){var V=T[s],q=T[s+1],H=g[s],W=I(V,q,M);if(b&&s<N){var Y=x(0,0,H,g[s+1],W),z=Y.length;for(f=0;f<z;++f)B[U++]=Y[f]}else for(f=0;f<W;++f)B[U++]=i.e.clone(H)}B[U]=i.e.clone(g[g.length-1]),g=B,A.length=0}T=L===o.L.GEODESIC?h.m.generateCartesianArc({positions:T,minDistance:M,ellipsoid:E,height:R,hMax:w}):h.m.generateCartesianRhumbArc({positions:T,granularity:M,ellipsoid:E,height:R})}var J,j=4*(C=T.length)-4,K=new Float64Array(3*j),Q=new Float64Array(3*j),X=new Float64Array(3*j),Z=new Float32Array(2*j),$=_.st?new Float32Array(2*j):void 0,ee=e.e(g)?new Uint8Array(4*j):void 0,te=P?new Float32Array(3*j):void 0,oe=0,re=0,ae=0,ne=0,ie=0,le=0;for(f=0;f<C;++f){var se,ce;0===f?(J=S,n.o.subtract(T[0],T[1],J),n.o.add(T[0],J,J)):J=T[f-1],n.o.clone(J,G),n.o.clone(T[f],F),f===C-1?(J=S,n.o.subtract(T[C-1],T[C-2],J),n.o.add(T[C-1],J,J)):J=T[f+1],n.o.clone(J,O),e.e(ee)&&(se=0===f||b?g[f]:g[f-1],f!==C-1&&(ce=g[f]));var pe=f===C-1?2:4;for(m=0===f?2:0;m<pe;++m){n.o.pack(F,K,oe),n.o.pack(G,Q,oe),n.o.pack(O,X,oe),oe+=3;var de=m-2<0?-1:1,ue=m%2*2-1,he=ue*f/C;if(Z[re++]=w>0?he:ue,Z[re++]=de*v,_.st&&($[ae++]=f/(C-1),$[ae++]=Math.max(Z[re-2],0)),e.e(ee)){var ye=m<2?se:ce;ee[ne++]=i.e.floatToByte(ye.red),ee[ne++]=i.e.floatToByte(ye.green),ee[ne++]=i.e.floatToByte(ye.blue),ee[ne++]=i.e.floatToByte(ye.alpha)}P&&(te[3*ie]=le,ie++)}le+=n.o.distance(J,T[f])}if(P){var fe=le,me=Math.random()*(k>0?k:fe);for(f=0;f<j;f++)te[3*f+1]=fe,te[3*f+2]=me}var ve=new p.a;ve.position=new c.o({componentDatatype:l.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:K}),ve.prevPosition=new c.o({componentDatatype:l.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:Q}),ve.nextPosition=new c.o({componentDatatype:l.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:X}),ve.expandAndWidth=new c.o({componentDatatype:l.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:Z}),_.st&&(ve.st=new c.o({componentDatatype:l.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:$})),e.e(ee)&&(ve.color=new c.o({componentDatatype:l.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:4,values:ee,normalize:!0})),P&&(ve.dist=new c.o({componentDatatype:l.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:te}));var we=d.IndexDatatype.createTypedArray(j,6*C-6),_e=0,ge=0,be=C-1;for(f=0;f<be;++f)we[ge++]=_e,we[ge++]=_e+2,we[ge++]=_e+1,we[ge++]=_e+1,we[ge++]=_e+2,we[ge++]=_e+3,_e+=4;return new c.I({attributes:ve,indices:we,primitiveType:y._0x4b6a27.TRIANGLES,boundingSphere:a.i.fromPoints(T),geometryType:c.Me.POLYLINES})}},function(o,r){return e.e(r)&&(o=P.unpack(o,r)),o._ellipsoid=t.t.clone(o._ellipsoid),P.createGeometry(o)}}));
