define(["./when-39df26e1","./Cartesian2-59a54ee7","./ArcType-31298545","./arrayRemoveDuplicates-3deab545","./buildModuleUrl-1b968a9d","./Cartographic-81e9e8b2","./Color-3ecb6d08","./ComponentDatatype-7d28dd1c","./Check-ff445961","./GeometryAttribute-9b3921a3","./GeometryAttributes-11421d3c","./IndexDatatype-be421fbf","./Math-5e067eb3","./PolylinePipeline-0d72c6c0","./FeatureDetection-2d4141ff","./VertexFormat-79ab0d67","./Event-e109b23e","./RuntimeError-251a1d8d","./WebGLConstants-42651efd","./Cartesian4-a56bd360","./EllipsoidGeodesic-840abdf5","./EllipsoidRhumbLine-61b02483","./IntersectionTests-036daea1","./Plane-775a5120"],(function(e,t,o,r,a,n,i,l,s,p,c,d,u,h,y,f,m,v,w,_,g,b,L,D){"use strict";var E=[];function A(e,t,o,r,a){var n=E;n.length=a;var l,s=o.red,p=o.green,c=o.blue,d=o.alpha,u=r.red,h=r.green,y=r.blue,f=r.alpha;if(i.e.equals(o,r)){for(l=0;l<a;l++)n[l]=i.e.clone(o);return n}var m=(u-s)/a,v=(h-p)/a,w=(y-c)/a,_=(f-d)/a;for(l=0;l<a;l++)n[l]=new i.e(s+l*m,p+l*v,c+l*w,d+l*_);return n}function x(r){var l=(r=e.u(r,e.u.EMPTY_OBJECT)).positions,p=r.colors,c=e.u(r.width,1),d=e.u(r.hMax,-1),h=e.u(r.colorsPerVertex,!1);if(!e.e(l)||l.length<2)throw new s.t("At least two positions are required.");if("number"!=typeof c)throw new s.t("width must be a number");if(e.e(p)&&(h&&p.length<l.length||!h&&p.length<l.length-1))throw new s.t("colors has an invalid length.");this._positions=l,this._colors=p,this._width=c,this._hMax=d,this._colorsPerVertex=h,this._dist=r.dist,this._period=r.period,this._vertexFormat=f.n.clone(e.u(r.vertexFormat,f.n.DEFAULT)),this._followSurface=e.u(r.followSurface,!0),e.e(r.followSurface)&&(function(t,o){if(!e.e(t)||!e.e(o))throw new s.t("identifier and message are required.");a.e(t,o)}("PolylineGeometry.followSurface","PolylineGeometry.followSurface is deprecated and will be removed in SuperMap3D. Use PolylineGeometry.arcType instead."),r.arcType=r.followSurface?o.L.GEODESIC:o.L.NONE),this._arcType=e.u(r.arcType,o.L.GEODESIC),this._followSurface=this._arcType!==o.L.NONE,this._granularity=e.u(r.granularity,u.e.RADIANS_PER_DEGREE),this._ellipsoid=t.t.clone(e.u(r.ellipsoid,t.t.WGS84)),this._workerName="createPolylineGeometry";var y=1+l.length*n.o.packedLength;y+=e.e(p)?1+p.length*i.e.packedLength:1,this.packedLength=y+t.t.packedLength+f.n.packedLength+4+2}x.pack=function(o,r,a){if(!e.e(o))throw new s.t("value is required");if(!e.e(r))throw new s.t("array is required");a=e.u(a,0);var l,p=o._positions,c=p.length;for(r[a++]=c,l=0;l<c;++l,a+=n.o.packedLength)n.o.pack(p[l],r,a);var d=o._colors;for(c=e.e(d)?d.length:0,r[a++]=c,l=0;l<c;++l,a+=i.e.packedLength)i.e.pack(d[l],r,a);return t.t.pack(o._ellipsoid,r,a),a+=t.t.packedLength,f.n.pack(o._vertexFormat,r,a),a+=f.n.packedLength,r[a++]=o._width,r[a++]=o._colorsPerVertex?1:0,r[a++]=o._arcType,r[a++]=o._granularity,r[a++]=o._hMax,r[a++]=o._dist,r[a]=o._period,r};var P=t.t.clone(t.t.UNIT_SPHERE),k=new f.n,T={positions:void 0,colors:void 0,ellipsoid:P,vertexFormat:k,width:void 0,colorsPerVertex:void 0,arcType:void 0,granularity:void 0};x.unpack=function(o,r,a){if(!e.e(o))throw new s.t("array is required");r=e.u(r,0);var l,p=o[r++],c=new Array(p);for(l=0;l<p;++l,r+=n.o.packedLength)c[l]=n.o.unpack(o,r);var d=(p=o[r++])>0?new Array(p):void 0;for(l=0;l<p;++l,r+=i.e.packedLength)d[l]=i.e.unpack(o,r);var u=t.t.unpack(o,r,P);r+=t.t.packedLength;var h=f.n.unpack(o,r,k);r+=f.n.packedLength;var y=o[r++],m=1===o[r++],v=o[r++],w=o[r++],_=o[r++],g=1==o[r++],b=o[r];return e.e(a)?(a._positions=c,a._colors=d,a._ellipsoid=t.t.clone(u,a._ellipsoid),a._vertexFormat=f.n.clone(h,a._vertexFormat),a._width=y,a._colorsPerVertex=m,a._arcType=v,a._granularity=w,a._hMax=_,a._dist=g,a._period=b,a):(T.positions=c,T.colors=d,T.width=y,T.colorsPerVertex=m,T.arcType=v,T.granularity=w,T.hMax=_,T.dist=g,T.period=b,new x(T))};var C=new n.o,S=new n.o,F=new n.o,G=new n.o;return x.createGeometry=function(t){var s,f,m,v=t._width,w=t._hMax,_=t._vertexFormat,g=t._colors,b=t._colorsPerVertex,L=t._arcType,D=t._granularity,x=t._ellipsoid,P=t._dist,k=t._period,T=r.D(t._positions,n.o.equalsEpsilon),O=T.length;if(!(O<2||v<=0)){if(L===o.L.GEODESIC||L===o.L.RHUMB){var M,I;L===o.L.GEODESIC?(M=u.e.chordLength(D,x.maximumRadius),I=h.m.numberOfPoints):(M=D,I=h.m.numberOfPointsRhumbLine);var R=h.m.extractHeights(T,x);if(e.e(g)){var N=1;for(s=0;s<O-1;++s)N+=I(T[s],T[s+1],M);var B=new Array(N),U=0;for(s=0;s<O-1;++s){var V=T[s],q=T[s+1],H=g[s],W=I(V,q,M);if(b&&s<N){var Y=A(0,0,H,g[s+1],W),z=Y.length;for(f=0;f<z;++f)B[U++]=Y[f]}else for(f=0;f<W;++f)B[U++]=i.e.clone(H)}B[U]=i.e.clone(g[g.length-1]),g=B,E.length=0}T=L===o.L.GEODESIC?h.m.generateCartesianArc({positions:T,minDistance:M,ellipsoid:x,height:R,hMax:w}):h.m.generateCartesianRhumbArc({positions:T,granularity:M,ellipsoid:x,height:R})}var J,j=4*(O=T.length)-4,K=new Float64Array(3*j),Q=new Float64Array(3*j),X=new Float64Array(3*j),Z=new Float32Array(2*j),$=_.st?new Float32Array(2*j):void 0,ee=e.e(g)?new Uint8Array(4*j):void 0,te=P?new Float32Array(3*j):void 0,oe=0,re=0,ae=0,ne=0,ie=0,le=0;for(f=0;f<O;++f){var se,pe;0===f?(J=C,n.o.subtract(T[0],T[1],J),n.o.add(T[0],J,J)):J=T[f-1],n.o.clone(J,F),n.o.clone(T[f],S),f===O-1?(J=C,n.o.subtract(T[O-1],T[O-2],J),n.o.add(T[O-1],J,J)):J=T[f+1],n.o.clone(J,G),e.e(ee)&&(se=0===f||b?g[f]:g[f-1],f!==O-1&&(pe=g[f]));var ce=f===O-1?2:4;for(m=0===f?2:0;m<ce;++m){n.o.pack(S,K,oe),n.o.pack(F,Q,oe),n.o.pack(G,X,oe),oe+=3;var de=m-2<0?-1:1,ue=m%2*2-1,he=ue*f/O;if(Z[re++]=w>0?he:ue,Z[re++]=de*v,_.st&&($[ae++]=f/(O-1),$[ae++]=Math.max(Z[re-2],0)),e.e(ee)){var ye=m<2?se:pe;ee[ne++]=i.e.floatToByte(ye.red),ee[ne++]=i.e.floatToByte(ye.green),ee[ne++]=i.e.floatToByte(ye.blue),ee[ne++]=i.e.floatToByte(ye.alpha)}P&&(te[3*ie]=le,ie++)}le+=n.o.distance(J,T[f])}if(P){var fe=le,me=Math.random()*(k>0?k:fe);for(f=0;f<j;f++)te[3*f+1]=fe,te[3*f+2]=me}var ve=new c.a;ve.position=new p.o({componentDatatype:l.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:K}),ve.prevPosition=new p.o({componentDatatype:l.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:Q}),ve.nextPosition=new p.o({componentDatatype:l.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:X}),ve.expandAndWidth=new p.o({componentDatatype:l.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:Z}),_.st&&(ve.st=new p.o({componentDatatype:l.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:$})),e.e(ee)&&(ve.color=new p.o({componentDatatype:l.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:4,values:ee,normalize:!0})),P&&(ve.dist=new p.o({componentDatatype:l.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:te}));var we=d.IndexDatatype.createTypedArray(j,6*O-6),_e=0,ge=0,be=O-1;for(f=0;f<be;++f)we[ge++]=_e,we[ge++]=_e+2,we[ge++]=_e+1,we[ge++]=_e+1,we[ge++]=_e+2,we[ge++]=_e+3,_e+=4;return new p.I({attributes:ve,indices:we,primitiveType:y._0x2355b9.TRIANGLES,boundingSphere:a.i.fromPoints(T),geometryType:p.Me.POLYLINES})}},function(o,r){return e.e(r)&&(o=x.unpack(o,r)),o._ellipsoid=t.t.clone(o._ellipsoid),x.createGeometry(o)}}));
