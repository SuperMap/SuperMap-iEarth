import{b as ma}from"./chunk-HOZ5IOFP.js";import{b as ua}from"./chunk-ZMHH4UFY.js";import{a as j}from"./chunk-EUSYH4JF.js";import{b as K,c as fa,d as ea}from"./chunk-CJHFPVIB.js";import{a as ra}from"./chunk-SSYG2MIY.js";import{a as f}from"./chunk-Z4SOZDEW.js";import{a as ta}from"./chunk-NLYLRNUA.js";import{a as z,b as va}from"./chunk-7TOCOFC3.js";import{a as Q}from"./chunk-ZVKIUA3Y.js";import{b as A}from"./chunk-3HZNWEV7.js";import{a}from"./chunk-LBR6REQR.js";import{a as P}from"./chunk-GXFCHGTA.js";import{a as V}from"./chunk-UBHQMGET.js";import{a as G}from"./chunk-EDZQSM3T.js";import{a as M}from"./chunk-PJGSCWXZ.js";import{a as y}from"./chunk-NUC3LT2W.js";var m=[];m[0]={num:0,des:"inside"};m[1]={num:4,data:[0,4,7,3],des:"left"};m[2]={num:4,data:[1,2,6,5],des:"right"};m[3]={num:0};m[4]={num:4,data:[0,1,5,4],des:"bottom"};m[5]={num:6,data:[0,1,5,4,7,3],des:"bottom, left"};m[6]={num:6,data:[0,1,2,6,5,4],des:"bottom, right"};m[7]={num:0};m[8]={num:4,data:[2,3,7,6],des:"top"};m[9]={num:6,data:[4,7,6,2,3,0],des:"top, left"};m[10]={num:6,data:[2,3,7,6,5,1],des:"top, right"};m[11]={num:0};m[12]={num:0};m[13]={num:0};m[14]={num:0};m[15]={num:0};m[16]={num:4,data:[0,3,2,1],des:"front"};m[17]={num:6,data:[0,4,7,3,2,1],des:"front, left"};m[18]={num:6,data:[0,3,2,6,5,1],des:"front, right"};m[19]={num:0};m[20]={num:6,data:[0,3,2,1,5,4],des:"front, bottom"};m[21]={num:6,data:[2,1,5,4,7,3],des:"front, bottom, left"};m[22]={num:6,data:[0,3,2,6,5,4],des:"front, bottom, right"};m[23]={num:0};m[24]={num:6,data:[0,3,7,6,2,1],des:"front, top"};m[25]={num:6,data:[0,4,7,6,2,1],des:"front, top, left"};m[26]={num:6,data:[0,3,7,6,5,1],des:"front, top, right"};m[27]={num:0};m[28]={num:0};m[29]={num:0};m[30]={num:0};m[31]={num:0};m[32]={num:4,data:[4,5,6,7],des:"back"};m[33]={num:6,data:[4,5,6,7,3,0],des:"back, left"};m[34]={num:6,data:[1,2,6,7,4,5],des:"back, right"};m[35]={num:0};m[36]={num:6,data:[0,1,5,6,7,4],des:"back, bottom"};m[37]={num:6,data:[0,1,5,6,7,3],des:"back, bottom, left"};m[38]={num:6,data:[0,1,2,6,7,4],des:"back, bottom, right"};m[39]={num:0};m[40]={num:6,data:[2,3,7,4,5,6],des:"back, top"};m[41]={num:6,data:[0,4,5,6,2,3],des:"back, top, left"};m[42]={num:6,data:[1,2,3,7,4,5],des:"back, top, right"};function p(t,r){this.center=a.clone(V(t,a.ZERO)),this.halfAxes=f.clone(V(r,f.ZERO)),this.areaDirty=1}p.packedLength=a.packedLength+f.packedLength;p.pack=function(t,r,n){return G.typeOf.object("value",t),G.defined("array",r),n=V(n,0),a.pack(t.center,r,n),f.pack(t.halfAxes,r,n+a.packedLength),r};p.unpack=function(t,r,n){return G.defined("array",t),r=V(r,0),y(n)||(n=new p),a.unpack(t,r,n.center),f.unpack(t,r+a.packedLength,n.halfAxes),n};var za=new a,Oa=new a,Na=new a,Ea=new a,Ta=new a,Ra=new a,ga=new f,Ba={unitary:new f,diagonal:new f},k=new a,E=new a,x=new a;p.fromPoints=function(t,r){if(y(r)||(r=new p),!y(t)||t.length===0)return r.halfAxes=f.ZERO,r.center=a.ZERO,r;var n,s=t.length,c=a.clone(t[0],za);for(n=1;n<s;n++)a.add(c,t[n],c);var i=1/s;a.multiplyByScalar(c,i,c);var v=0,b=0,u=0,w=0,h=0,e=0,o;for(n=0;n<s;n++)o=a.subtract(t[n],c,Oa),v+=o.x*o.x,b+=o.x*o.y,u+=o.x*o.z,w+=o.y*o.y,h+=o.y*o.z,e+=o.z*o.z;v*=i,b*=i,u*=i,w*=i,h*=i,e*=i;var d=ga;d[0]=v,d[1]=b,d[2]=u,d[3]=b,d[4]=w,d[5]=h,d[6]=u,d[7]=h,d[8]=e;var C=f.computeEigenDecomposition(d,Ba),U=f.clone(C.unitary,r.halfAxes),g=f.getColumn(U,0,Ea),B=f.getColumn(U,1,Ta),O=f.getColumn(U,2,Ra),D=-Number.MAX_VALUE,L=-Number.MAX_VALUE,S=-Number.MAX_VALUE,T=Number.MAX_VALUE,R=Number.MAX_VALUE,N=Number.MAX_VALUE;for(n=0;n<s;n++)o=t[n],D=Math.max(a.dot(g,o),D),L=Math.max(a.dot(B,o),L),S=Math.max(a.dot(O,o),S),T=Math.min(a.dot(g,o),T),R=Math.min(a.dot(B,o),R),N=Math.min(a.dot(O,o),N);g=a.multiplyByScalar(g,.5*(T+D),g),B=a.multiplyByScalar(B,.5*(R+L),B),O=a.multiplyByScalar(O,.5*(N+S),O);var q=a.add(g,B,r.center);a.add(q,O,q);var l=Na;return l.x=D-T,l.y=L-R,l.z=S-N,a.multiplyByScalar(l,.5,l),f.multiplyByScale(r.halfAxes,l,r.halfAxes),r};var Ca=new a,La=new a;function wa(t,r,n,s,c,i,v,b,u,w,h){if(!y(c)||!y(i)||!y(v)||!y(b)||!y(u)||!y(w))throw new M("all extents (minimum/maximum X/Y/Z) are required.");y(h)||(h=new p);var e=h.halfAxes;f.setColumn(e,0,r,e),f.setColumn(e,1,n,e),f.setColumn(e,2,s,e);var o=Ca;o.x=(c+i)/2,o.y=(v+b)/2,o.z=(u+w)/2;var d=La;d.x=(i-c)/2,d.y=(b-v)/2,d.z=(w-u)/2;var C=h.center;return o=f.multiplyByVector(e,o,o),a.add(t,o,C),f.multiplyByScale(e,d,e),h}var pa=new A,Ia=new a,Sa=new A,qa=new A,ka=new A,Ua=new A,Da=new A,Va=new a,ba=new a,Xa=new a,xa=new a,ja=new a,Wa=new z,_a=new z,Za=new z,Ya=new z,Fa=new z,Ga=new a,Ja=new a,Ka=new a,Qa=new a,$a=new z,Ha=new a,ar=new a,rr=new a,tr=new j(a.UNIT_X,0);p.fromRectangle=function(t,r,n,s,c){if(!y(t))throw new M("rectangle is required");if(t.width<0||t.width>P.TWO_PI)throw new M("Rectangle width must be between 0 and 2*pi");if(t.height<0||t.height>P.PI)throw new M("Rectangle height must be between 0 and pi");if(y(s)&&!P.equalsEpsilon(s.radii.x,s.radii.y,P.EPSILON15))throw new M("Ellipsoid must be an ellipsoid of revolution (radii.x == radii.y)");r=V(r,0),n=V(n,0),s=V(s,va.WGS84);var i,v,b,u,w,h,e;if(t.width<=P.PI){var o=ta.center(t,pa),d=s.cartographicToCartesian(o,Ia),C=new ma(d,s);e=C.plane;var U=o.longitude,g=t.south<0&&t.north>0?0:o.latitude,B=A.fromRadians(U,t.north,n,Sa),O=A.fromRadians(t.west,t.north,n,qa),D=A.fromRadians(t.west,g,n,ka),L=A.fromRadians(t.west,t.south,n,Ua),S=A.fromRadians(U,t.south,n,Da),T=s.cartographicToCartesian(B,Va),R=s.cartographicToCartesian(O,ba),N=s.cartographicToCartesian(D,Xa),q=s.cartographicToCartesian(L,xa),l=s.cartographicToCartesian(S,ja),Z=C.projectPointToNearestOnPlane(T,Wa),X=C.projectPointToNearestOnPlane(R,_a),I=C.projectPointToNearestOnPlane(N,Za),Y=C.projectPointToNearestOnPlane(q,Ya),J=C.projectPointToNearestOnPlane(l,Fa);return i=Math.min(X.x,I.x,Y.x),v=-i,u=Math.max(X.y,Z.y),b=Math.min(Y.y,J.y),O.height=L.height=r,R=s.cartographicToCartesian(O,ba),q=s.cartographicToCartesian(L,xa),w=Math.min(j.getPointDistance(e,R),j.getPointDistance(e,q)),h=n,wa(C.origin,C.xAxis,C.yAxis,C.zAxis,i,v,b,u,w,h,c)}var F=t.south>0,ia=t.north<0,H=F?t.south:ia?t.north:0,sa=ta.center(t,pa).longitude,_=a.fromRadians(sa,H,n,s,Ga);_.z=0;var la=Math.abs(_.x)<P.EPSILON10&&Math.abs(_.y)<P.EPSILON10,aa=la?a.UNIT_X:a.normalize(_,Ja),da=a.UNIT_Z,ha=a.cross(aa,da,Ka);e=j.fromPointNormal(_,aa,tr);var Pa=a.fromRadians(sa+P.PI_OVER_TWO,H,n,s,Qa);v=a.dot(j.projectPointOntoPlane(e,Pa,$a),ha),i=-v,u=a.fromRadians(0,t.north,ia?r:n,s,Ha).z,b=a.fromRadians(0,t.south,F?r:n,s,ar).z;var Aa=a.fromRadians(t.east,H,n,s,rr);return w=j.getPointDistance(e,Aa),h=0,wa(_,ha,da,aa,i,v,b,u,w,h,c)};p.clone=function(t,r){if(!!y(t))return y(r)?(a.clone(t.center,r.center),f.clone(t.halfAxes,r.halfAxes),r.areaDirty=1,r):new p(t.center,t.halfAxes)};p.intersectPlane=function(t,r){if(!y(t))throw new M("box is required.");if(!y(r))throw new M("plane is required.");var n=t.center,s=r.normal,c=t.halfAxes,i=s.x,v=s.y,b=s.z,u=Math.abs(i*c[f.COLUMN0ROW0]+v*c[f.COLUMN0ROW1]+b*c[f.COLUMN0ROW2])+Math.abs(i*c[f.COLUMN1ROW0]+v*c[f.COLUMN1ROW1]+b*c[f.COLUMN1ROW2])+Math.abs(i*c[f.COLUMN2ROW0]+v*c[f.COLUMN2ROW1]+b*c[f.COLUMN2ROW2]),w=a.dot(s,n)+r.distance;return w<=-u?K.OUTSIDE:w>=u?K.INSIDE:K.INTERSECTING};var na=new a,oa=new a,ca=new a,er=new a,nr=new a;p.distanceSquaredTo=function(t,r){if(!y(t))throw new M("box is required.");if(!y(r))throw new M("cartesian is required.");var n=a.subtract(r,t.center,Ca),s=t.halfAxes,c=f.getColumn(s,0,na),i=f.getColumn(s,1,oa),v=f.getColumn(s,2,ca),b=a.magnitude(c),u=a.magnitude(i),w=a.magnitude(v);a.normalize(c,c),a.normalize(i,i),a.normalize(v,v);var h=er;h.x=a.dot(n,c),h.y=a.dot(n,i),h.z=a.dot(n,v);var e=0,o;return h.x<-b?(o=h.x+b,e+=o*o):h.x>b&&(o=h.x-b,e+=o*o),h.y<-u?(o=h.y+u,e+=o*o):h.y>u&&(o=h.y-u,e+=o*o),h.z<-w?(o=h.z+w,e+=o*o):h.z>w&&(o=h.z-w,e+=o*o),e};var Ma=new a,or=new a;p.computePlaneDistances=function(t,r,n,s){if(!y(t))throw new M("box is required.");if(!y(r))throw new M("position is required.");if(!y(n))throw new M("direction is required.");y(s)||(s=new fa);var c=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,v=t.center,b=t.halfAxes,u=f.getColumn(b,0,na),w=f.getColumn(b,1,oa),h=f.getColumn(b,2,ca),e=a.add(u,w,Ma);a.add(e,h,e),a.add(e,v,e);var o=a.subtract(e,r,or),d=a.dot(n,o);return c=Math.min(d,c),i=Math.max(d,i),a.add(v,u,e),a.add(e,w,e),a.subtract(e,h,e),a.subtract(e,r,o),d=a.dot(n,o),c=Math.min(d,c),i=Math.max(d,i),a.add(v,u,e),a.subtract(e,w,e),a.add(e,h,e),a.subtract(e,r,o),d=a.dot(n,o),c=Math.min(d,c),i=Math.max(d,i),a.add(v,u,e),a.subtract(e,w,e),a.subtract(e,h,e),a.subtract(e,r,o),d=a.dot(n,o),c=Math.min(d,c),i=Math.max(d,i),a.subtract(v,u,e),a.add(e,w,e),a.add(e,h,e),a.subtract(e,r,o),d=a.dot(n,o),c=Math.min(d,c),i=Math.max(d,i),a.subtract(v,u,e),a.add(e,w,e),a.subtract(e,h,e),a.subtract(e,r,o),d=a.dot(n,o),c=Math.min(d,c),i=Math.max(d,i),a.subtract(v,u,e),a.subtract(e,w,e),a.add(e,h,e),a.subtract(e,r,o),d=a.dot(n,o),c=Math.min(d,c),i=Math.max(d,i),a.subtract(v,u,e),a.subtract(e,w,e),a.subtract(e,h,e),a.subtract(e,r,o),d=a.dot(n,o),c=Math.min(d,c),i=Math.max(d,i),s.start=c,s.stop=i,s};var cr=new ea;p.isOccluded=function(t,r){if(!y(t))throw new M("box is required.");if(!y(r))throw new M("occluder is required.");var n=ea.fromOrientedBoundingBox(t,cr);return!r.isBoundingSphereVisible(n)};p.prototype.intersectPlane=function(t){return p.intersectPlane(this,t)};p.prototype.distanceSquaredTo=function(t){return p.distanceSquaredTo(this,t)};p.prototype.computePlaneDistances=function(t,r,n){return p.computePlaneDistances(this,t,r,n)};p.prototype.isOccluded=function(t){return p.isOccluded(this,t)};p.equals=function(t,r){return t===r||y(t)&&y(r)&&a.equals(t.center,r.center)&&f.equals(t.halfAxes,r.halfAxes)};p.prototype.clone=function(t){return p.clone(this,t)};p.prototype.equals=function(t){return p.equals(this,t)};var ya=new Q;p.prototype._updateBBox=function(){if(this.areaDirty==1){var t=f.getColumn(this.halfAxes,0,na),r=a.clone(a.negate(t,k)),n=f.getColumn(this.halfAxes,1,oa),s=a.clone(a.negate(n,k)),c=f.getColumn(this.halfAxes,2,ca),i=a.clone(a.negate(c,k));this.bbox=[],a.add(this.center,n,k),a.add(k,i,E),a.add(E,r,x),this.bbox[0]=new a(x.x,x.y,x.z),a.add(E,t,x),this.bbox[1]=new a(x.x,x.y,x.z),a.add(k,c,E),a.add(E,t,x),this.bbox[2]=new a(x.x,x.y,x.z),a.add(E,r,x),this.bbox[3]=new a(x.x,x.y,x.z),a.add(this.center,s,k),a.add(k,i,E),a.add(E,r,x),this.bbox[4]=new a(x.x,x.y,x.z),a.add(E,t,x),this.bbox[5]=new a(x.x,x.y,x.z),a.add(k,c,E),a.add(E,t,x),this.bbox[6]=new a(x.x,x.y,x.z),a.add(E,r,x),this.bbox[7]=new a(x.x,x.y,x.z);var v=a.magnitude(t),b=a.magnitude(n),u=a.magnitude(c),w=new a(-v,-b,-u),h=new a(v,b,u);if(v*b*u==0){this.areaDirty=-1;return}a.normalize(t,t),a.normalize(n,n),a.normalize(c,c),this.u=a.clone(t),this.v=a.clone(n),this.w=a.clone(c),this.posMin=w,this.posMaX=h,this.areaDirty=0}};var W=[];W.push(new z);W.push(new z);W.push(new z);W.push(new z);W.push(new z);W.push(new z);var ir=new A,$=new a;p.prototype.calculateBoxArea=function(t,r,n,s,c,i,v,b){this._updateBBox();var u=t,w=a.subtract(u,this.center,nr);if(this.areaDirty==-1){var h=i!=-1?i:a.distance(this.posMaX,this.posMin)*.5,e=c,o=e/s,d=o*h/n;return P.PI*d*d}var C=a.fromElements(a.dot(w,this.u),a.dot(w,this.v),a.dot(w,this.w),Ma),U=C.x<this.posMin.x?1:0,g=C.x>this.posMaX.x?1:0,B=C.z<this.posMin.z?1:0,O=C.z>this.posMaX.z?1:0,D=C.y>this.posMaX.y?1:0,L=C.y<this.posMin.y?1:0,S=U+(g<<1)+(B<<2)+(O<<3)+(D<<4)+(L<<5);if(S>42)return console.log("area calculation is wrong"),-100;var T=m[S];if(T.num==0){var h=i!=-1?i:a.distance(this.posMaX,this.posMin)*.5,e=c,o=e/s,d=o*h/n;return P.PI*d*d}if(T.num==0)return console.log("area calculation is wrong"),-100;for(var R=[],N,q=v,l=0;l<T.num;l++){var Z=W[l],X=this.bbox[T.data[l]];N=!1;var I,Y=P.PI;if(r===3)I=ra.multiplyByVector(q,Q.fromElements(X.x,X.y,X.z,1),ya),I.z<0&&(N=!0,h==-1&&(Y=P.PI_OVER_FOUR,n=a.magnitude(w)));else{var J=b,F=J.ellipsoid.cartesianToCartographic(X,ir);y(F)?(J.project(F,$),I=ra.multiplyByVector(q,Q.fromElements($.z,$.x,$.y,1),ya),I.z<0&&(N=!0)):N=!0}if(N==!0){var h=i!=-1?i:a.distance(this.posMaX,this.posMin)*.5,e=c,o=e/s,d=o*h/n;return Y*d*d}else Z.x=I.x/I.w,Z.y=c-I.y/I.w,R.push(Z)}return Math.abs(ua.computeArea2D(R))};p.prototype.computeCorners=function(t){return p.computeCorners(this,t)};var sr=new a,dr=new a,hr=new a;p.computeCorners=function(t,r){G.typeOf.object("box",t),y(r)||(r=[new a,new a,new a,new a,new a,new a,new a,new a]);let n=t.center,s=t.halfAxes,c=f.getColumn(s,0,sr),i=f.getColumn(s,1,dr),v=f.getColumn(s,2,hr);return a.clone(n,r[0]),a.subtract(r[0],c,r[0]),a.subtract(r[0],i,r[0]),a.subtract(r[0],v,r[0]),a.clone(n,r[1]),a.subtract(r[1],c,r[1]),a.subtract(r[1],i,r[1]),a.add(r[1],v,r[1]),a.clone(n,r[2]),a.subtract(r[2],c,r[2]),a.add(r[2],i,r[2]),a.subtract(r[2],v,r[2]),a.clone(n,r[3]),a.subtract(r[3],c,r[3]),a.add(r[3],i,r[3]),a.add(r[3],v,r[3]),a.clone(n,r[4]),a.add(r[4],c,r[4]),a.subtract(r[4],i,r[4]),a.subtract(r[4],v,r[4]),a.clone(n,r[5]),a.add(r[5],c,r[5]),a.subtract(r[5],i,r[5]),a.add(r[5],v,r[5]),a.clone(n,r[6]),a.add(r[6],c,r[6]),a.add(r[6],i,r[6]),a.subtract(r[6],v,r[6]),a.clone(n,r[7]),a.add(r[7],c,r[7]),a.add(r[7],i,r[7]),a.add(r[7],v,r[7]),r};var Rr=p;export{Rr as a};
