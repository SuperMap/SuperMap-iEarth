import{a as S,b as _}from"./chunk-3HZNWEV7.js";import{a}from"./chunk-LBR6REQR.js";import{a as p}from"./chunk-GXFCHGTA.js";import{a as d}from"./chunk-UBHQMGET.js";import{a as o}from"./chunk-EDZQSM3T.js";import{a as h}from"./chunk-PJGSCWXZ.js";import{a as f}from"./chunk-NUC3LT2W.js";function i(n,e){this.x=d(n,0),this.y=d(e,0)}i.fromElements=function(n,e,t){return f(t)?(t.x=n,t.y=e,t):new i(n,e)};i.clone=function(n,e){if(!!f(n))return f(e)?(e.x=n.x,e.y=n.y,e):new i(n.x,n.y)};i.fromCartesian3=i.clone;i.fromCartesian4=i.clone;i.packedLength=2;i.pack=function(n,e,t){return o.typeOf.object("value",n),o.defined("array",e),t=d(t,0),e[t++]=n.x,e[t]=n.y,e};i.unpack=function(n,e,t){return o.defined("array",n),e=d(e,0),f(t)||(t=new i),t.x=n[e++],t.y=n[e],t};i.packArray=function(n,e){o.defined("array",n);var t=n.length,r=t*2;if(!f(e))e=new Array(r);else{if(!Array.isArray(e)&&e.length!==r)throw new h("If result is a typed array, it must have exactly array.length * 2 elements");e.length!==r&&(e.length=r)}for(var u=0;u<t;++u)i.pack(n[u],e,u*2);return e};i.unpackArray=function(n,e){if(o.defined("array",n),o.typeOf.number.greaterThanOrEquals("array.length",n.length,2),n.length%2!==0)throw new h("array length must be a multiple of 2.");var t=n.length;f(e)?e.length=t/2:e=new Array(t/2);for(var r=0;r<t;r+=2){var u=r/2;e[u]=i.unpack(n,r,e[u])}return e};i.fromArray=i.unpack;i.maximumComponent=function(n){return o.typeOf.object("cartesian",n),Math.max(n.x,n.y)};i.minimumComponent=function(n){return o.typeOf.object("cartesian",n),Math.min(n.x,n.y)};i.minimumByComponent=function(n,e,t){return o.typeOf.object("first",n),o.typeOf.object("second",e),o.typeOf.object("result",t),t.x=Math.min(n.x,e.x),t.y=Math.min(n.y,e.y),t};i.maximumByComponent=function(n,e,t){return o.typeOf.object("first",n),o.typeOf.object("second",e),o.typeOf.object("result",t),t.x=Math.max(n.x,e.x),t.y=Math.max(n.y,e.y),t};i.magnitudeSquared=function(n){return o.typeOf.object("cartesian",n),n.x*n.x+n.y*n.y};i.magnitude=function(n){return Math.sqrt(i.magnitudeSquared(n))};var b=new i;i.distance=function(n,e){return o.typeOf.object("left",n),o.typeOf.object("right",e),i.subtract(n,e,b),i.magnitude(b)};i.distanceSquared=function(n,e){return o.typeOf.object("left",n),o.typeOf.object("right",e),i.subtract(n,e,b),i.magnitudeSquared(b)};i.normalize=function(n,e){o.typeOf.object("cartesian",n),o.typeOf.object("result",e);var t=i.magnitude(n);if(e.x=n.x/t,e.y=n.y/t,isNaN(e.x)||isNaN(e.y))throw new h("normalized result is not a number");return e};i.dot=function(n,e){return o.typeOf.object("left",n),o.typeOf.object("right",e),n.x*e.x+n.y*e.y};i.multiplyComponents=function(n,e,t){return o.typeOf.object("left",n),o.typeOf.object("right",e),o.typeOf.object("result",t),t.x=n.x*e.x,t.y=n.y*e.y,t};i.divideComponents=function(n,e,t){return o.typeOf.object("left",n),o.typeOf.object("right",e),o.typeOf.object("result",t),t.x=n.x/e.x,t.y=n.y/e.y,t};i.add=function(n,e,t){return o.typeOf.object("left",n),o.typeOf.object("right",e),o.typeOf.object("result",t),t.x=n.x+e.x,t.y=n.y+e.y,t};i.subtract=function(n,e,t){return o.typeOf.object("left",n),o.typeOf.object("right",e),o.typeOf.object("result",t),t.x=n.x-e.x,t.y=n.y-e.y,t};i.multiplyByScalar=function(n,e,t){return o.typeOf.object("cartesian",n),o.typeOf.number("scalar",e),o.typeOf.object("result",t),t.x=n.x*e,t.y=n.y*e,t};i.divideByScalar=function(n,e,t){return o.typeOf.object("cartesian",n),o.typeOf.number("scalar",e),o.typeOf.object("result",t),t.x=n.x/e,t.y=n.y/e,t};i.negate=function(n,e){return o.typeOf.object("cartesian",n),o.typeOf.object("result",e),e.x=-n.x,e.y=-n.y,e};i.abs=function(n,e){return o.typeOf.object("cartesian",n),o.typeOf.object("result",e),e.x=Math.abs(n.x),e.y=Math.abs(n.y),e};var j=new i;i.lerp=function(n,e,t,r){return o.typeOf.object("start",n),o.typeOf.object("end",e),o.typeOf.number("t",t),o.typeOf.object("result",r),i.multiplyByScalar(e,t,j),r=i.multiplyByScalar(n,1-t,r),i.add(j,r,r)};var g=new i,q=new i;i.angleBetween=function(n,e){return o.typeOf.object("left",n),o.typeOf.object("right",e),i.normalize(n,g),i.normalize(e,q),p.acosClamped(i.dot(g,q))};var x=new i;i.mostOrthogonalAxis=function(n,e){o.typeOf.object("cartesian",n),o.typeOf.object("result",e);var t=i.normalize(n,x);return i.abs(t,t),t.x<=t.y?e=i.clone(i.UNIT_X,e):e=i.clone(i.UNIT_Y,e),e};i.equals=function(n,e){return n===e||f(n)&&f(e)&&n.x===e.x&&n.y===e.y};i.equalsArray=function(n,e,t){return n.x===e[t]&&n.y===e[t+1]};i.equalsEpsilon=function(n,e,t,r){return n===e||f(n)&&f(e)&&p.equalsEpsilon(n.x,e.x,t,r)&&p.equalsEpsilon(n.y,e.y,t,r)};i.ZERO=Object.freeze(new i(0,0));i.UNIT_X=Object.freeze(new i(1,0));i.UNIT_Y=Object.freeze(new i(0,1));i.prototype.clone=function(n){return i.clone(this,n)};i.prototype.equals=function(n){return i.equals(this,n)};i.prototype.equalsEpsilon=function(n,e,t){return i.equalsEpsilon(this,n,e,t)};i.prototype.toString=function(){return"("+this.x+", "+this.y+")"};i.prototype.toArray=function(n,e){i.pack(this,n,e)};var v=i;function w(n,e,t,r){e=d(e,0),t=d(t,0),r=d(r,0),o.typeOf.number.greaterThanOrEquals("x",e,0),o.typeOf.number.greaterThanOrEquals("y",t,0),o.typeOf.number.greaterThanOrEquals("z",r,0),n._radii=new a(e,t,r),n._radiiSquared=new a(e*e,t*t,r*r),n._radiiToTheFourth=new a(e*e*e*e,t*t*t*t,r*r*r*r),n._oneOverRadii=new a(e===0?0:1/e,t===0?0:1/t,r===0?0:1/r),n._oneOverRadiiSquared=new a(e===0?0:1/(e*e),t===0?0:1/(t*t),r===0?0:1/(r*r)),n._minimumRadius=Math.min(e,t,r),n._maximumRadius=Math.max(e,t,r),n._centerToleranceSquared=p.EPSILON1,n._radiiSquared.z!==0&&(n._squaredXOverSquaredZ=n._radiiSquared.x/n._radiiSquared.z)}function c(n,e,t){this._radii=void 0,this._radiiSquared=void 0,this._radiiToTheFourth=void 0,this._oneOverRadii=void 0,this._oneOverRadiiSquared=void 0,this._minimumRadius=void 0,this._maximumRadius=void 0,this._centerToleranceSquared=void 0,this._squaredXOverSquaredZ=void 0,w(this,n,e,t)}Object.defineProperties(c.prototype,{radii:{get:function(){return this._radii}},radiiSquared:{get:function(){return this._radiiSquared}},radiiToTheFourth:{get:function(){return this._radiiToTheFourth}},oneOverRadii:{get:function(){return this._oneOverRadii}},oneOverRadiiSquared:{get:function(){return this._oneOverRadiiSquared}},minimumRadius:{get:function(){return this._minimumRadius}},maximumRadius:{get:function(){return this._maximumRadius}}});c.clone=function(n,e){if(!!f(n)){var t=n._radii;return f(e)?(a.clone(t,e._radii),a.clone(n._radiiSquared,e._radiiSquared),a.clone(n._radiiToTheFourth,e._radiiToTheFourth),a.clone(n._oneOverRadii,e._oneOverRadii),a.clone(n._oneOverRadiiSquared,e._oneOverRadiiSquared),e._minimumRadius=n._minimumRadius,e._maximumRadius=n._maximumRadius,e._centerToleranceSquared=n._centerToleranceSquared,e):new c(t.x,t.y,t.z)}};c.fromCartesian3=function(n,e){return f(e)||(e=new c),f(n)&&w(e,n.x,n.y,n.z),e};c.WGS84=Object.freeze(new c(6378137,6378137,6356752314245179e-9));c.XIAN80=Object.freeze(new c(6378140,6378140,635675529e-2));c.CGCS2000=Object.freeze(new c(6378137,6378137,635675231e-2));c.UNIT_SPHERE=Object.freeze(new c(1,1,1));c.MOON=Object.freeze(new c(p.LUNAR_RADIUS,p.LUNAR_RADIUS,p.LUNAR_RADIUS));c.prototype.clone=function(n){return c.clone(this,n)};c.packedLength=a.packedLength;c.pack=function(n,e,t){return o.typeOf.object("value",n),o.defined("array",e),t=d(t,0),a.pack(n._radii,e,t),e};c.unpack=function(n,e,t){o.defined("array",n),e=d(e,0);var r=a.unpack(n,e);return c.fromCartesian3(r,t)};c.prototype.geocentricSurfaceNormal=a.normalize;c.prototype.geodeticSurfaceNormalCartographic=function(n,e){o.typeOf.object("cartographic",n);var t=n.longitude,r=n.latitude,u=Math.cos(r),m=u*Math.cos(t),y=u*Math.sin(t),O=Math.sin(r);return f(e)||(e=new a),e.x=m,e.y=y,e.z=O,a.normalize(e,e)};c.prototype.geodeticSurfaceNormal=function(n,e){return f(e)||(e=new a),e=a.multiplyComponents(n,this._oneOverRadiiSquared,e),a.normalize(e,e)};var R=new a,T=new a;c.prototype.cartographicToCartesian=function(n,e){var t=R,r=T;this.geodeticSurfaceNormalCartographic(n,t),a.multiplyComponents(this._radiiSquared,t,r);var u=Math.sqrt(a.dot(t,r));return a.divideByScalar(r,u,r),a.multiplyByScalar(t,n.height,t),f(e)||(e=new a),a.add(r,t,e)};c.prototype.cartographicArrayToCartesianArray=function(n,e){o.defined("cartographics",n);var t=n.length;f(e)?e.length=t:e=new Array(t);for(var r=0;r<t;r++)e[r]=this.cartographicToCartesian(n[r],e[r]);return e};var C=new a,A=new a,N=new a;c.prototype.cartesianToCartographic=function(n,e){var t=this.scaleToGeodeticSurface(n,A);if(!!f(t)){var r=this.geodeticSurfaceNormal(t,C),u=a.subtract(n,t,N),m=Math.atan2(r.y,r.x),y=Math.asin(r.z),O=p.sign(a.dot(u,n))*a.magnitude(u);return f(e)?(e.longitude=m,e.latitude=y,e.height=O,e):new _(m,y,O)}};c.prototype.cartesianArrayToCartographicArray=function(n,e){o.defined("cartesians",n);var t=n.length;f(e)?e.length=t:e=new Array(t);for(var r=0;r<t;++r)e[r]=this.cartesianToCartographic(n[r],e[r]);return e};c.prototype.scaleToGeodeticSurface=function(n,e){return S(n,this._oneOverRadii,this._oneOverRadiiSquared,this._centerToleranceSquared,e)};c.prototype.scaleToGeocentricSurface=function(n,e){o.typeOf.object("cartesian",n),f(e)||(e=new a);var t=n.x,r=n.y,u=n.z,m=this._oneOverRadiiSquared,y=1/Math.sqrt(t*t*m.x+r*r*m.y+u*u*m.z);return a.multiplyByScalar(n,y,e)};c.prototype.transformPositionToScaledSpace=function(n,e){return f(e)||(e=new a),a.multiplyComponents(n,this._oneOverRadii,e)};c.prototype.transformPositionFromScaledSpace=function(n,e){return f(e)||(e=new a),a.multiplyComponents(n,this._radii,e)};c.prototype.equals=function(n){return this===n||f(n)&&a.equals(this._radii,n._radii)};c.prototype.toString=function(){return this._radii.toString()};c.prototype.getSurfaceNormalIntersectionWithZAxis=function(n,e,t){if(o.typeOf.object("position",n),!p.equalsEpsilon(this._radii.x,this._radii.y,p.EPSILON15))throw new h("Ellipsoid must be an ellipsoid of revolution (radii.x == radii.y)");o.typeOf.number.greaterThan("Ellipsoid.radii.z",this._radii.z,0),e=d(e,0);var r=this._squaredXOverSquaredZ;if(f(t)||(t=new a),t.x=0,t.y=0,t.z=n.z*(1-r),!(Math.abs(t.z)>=this._radii.z-e))return t};var M=new a;c.prototype.getLocalCurvature=function(n,e){o.typeOf.object("surfacePosition",n),f(e)||(e=new v);let t=this.getSurfaceNormalIntersectionWithZAxis(n,0,M),r=a.distance(n,t),u=this.minimumRadius*r/this.maximumRadius**2,m=r*u**2;return v.fromElements(1/r,1/m,e)};var W=c;export{v as a,W as b};
