define(["./when-39df26e1","./Cartesian2-59a54ee7","./arrayRemoveDuplicates-3deab545","./BoundingRectangle-2b853aa7","./buildModuleUrl-1b968a9d","./Cartographic-81e9e8b2","./ComponentDatatype-7d28dd1c","./PolylineVolumeGeometryLibrary-cc9025df","./Check-ff445961","./GeometryAttribute-9b3921a3","./GeometryAttributes-11421d3c","./GeometryPipeline-91e3b4f0","./IndexDatatype-be421fbf","./Math-5e067eb3","./PolygonPipeline-ae195f4e","./FeatureDetection-2d4141ff","./VertexFormat-79ab0d67","./Event-e109b23e","./RuntimeError-251a1d8d","./WebGLConstants-42651efd","./Cartesian4-a56bd360","./EllipsoidTangentPlane-ee91c10e","./IntersectionTests-036daea1","./Plane-775a5120","./PolylinePipeline-0d72c6c0","./EllipsoidGeodesic-840abdf5","./EllipsoidRhumbLine-61b02483","./AttributeCompression-4cf880dc","./EncodedCartesian3-003b996c"],(function(e,t,n,o,r,i,a,s,p,l,c,u,d,h,y,g,m,f,v,b,k,_,P,L,w,C,E,A,D){"use strict";function T(n){var o=(n=e.u(n,e.u.EMPTY_OBJECT)).polylinePositions,r=n.shapePositions;if(!e.e(o))throw new p.t("options.polylinePositions is required.");if(!e.e(r))throw new p.t("options.shapePositions is required.");this._positions=o,this._shape=r,this._ellipsoid=t.t.clone(e.u(n.ellipsoid,t.t.WGS84)),this._cornerType=e.u(n.cornerType,s.S.ROUNDED),this._vertexFormat=m.n.clone(e.u(n.vertexFormat,m.n.DEFAULT)),this._granularity=e.u(n.granularity,h.e.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeGeometry",this.enuCenter=e.u(n.enuCenter,i.o.ZERO);var a=1+o.length*i.o.packedLength;a+=1+r.length*t.o.packedLength+i.o.packedLength,this.packedLength=a+t.t.packedLength+m.n.packedLength+2}T.pack=function(n,o,r){if(!e.e(n))throw new p.t("value is required");if(!e.e(o))throw new p.t("array is required");r=e.u(r,0);var a,s=n._positions,l=s.length;for(o[r++]=l,a=0;a<l;++a,r+=i.o.packedLength)i.o.pack(s[a],o,r);var c=n._shape;for(l=c.length,o[r++]=l,a=0;a<l;++a,r+=t.o.packedLength)t.o.pack(c[a],o,r);return t.t.pack(n._ellipsoid,o,r),r+=t.t.packedLength,m.n.pack(n._vertexFormat,o,r),r+=m.n.packedLength,o[r++]=n._cornerType,o[r++]=n._granularity,i.o.pack(n.enuCenter,o,r),o};var F=t.t.clone(t.t.UNIT_SPHERE),G=new m.n,R={polylinePositions:void 0,shapePositions:void 0,ellipsoid:F,vertexFormat:G,cornerType:void 0,granularity:void 0,enuCenter:void 0};T.unpack=function(n,o,r){if(!e.e(n))throw new p.t("array is required");o=e.u(o,0);var a,s=n[o++],l=new Array(s);for(a=0;a<s;++a,o+=i.o.packedLength)l[a]=i.o.unpack(n,o);s=n[o++];var c=new Array(s);for(a=0;a<s;++a,o+=t.o.packedLength)c[a]=t.o.unpack(n,o);var u=t.t.unpack(n,o,F);o+=t.t.packedLength;var d=m.n.unpack(n,o,G);o+=m.n.packedLength;var h,y=n[o++],g=n[o++];return h=i.o.unpack(n,o),e.e(r)?(r._positions=l,r._shape=c,r._ellipsoid=t.t.clone(u,r._ellipsoid),r._vertexFormat=m.n.clone(d,r._vertexFormat),r._cornerType=y,r._granularity=g,r.enuCenter=h,r):(R.polylinePositions=l,R.shapePositions=c,R.cornerType=y,R.granularity=g,R.enuCenter=h,new T(R))};var x=new o.f;return T.createGeometry=function(t){for(var p=t._positions,h=n.D(p,i.o.equalsEpsilon),m=h.length,f=new Array(m),v=0;v<m;v++)f[v]=i.o.clone(h[v]);var b=t._shape;if(b=s.J.removeDuplicatesFromShape(b),!(h.length<2||b.length<3)){y.A.computeWindingOrder2D(b)===y.W.CLOCKWISE&&b.reverse();var k=o.f.fromPoints(b,x),_={};if(_.combinedPositions=s.J.computePositions(f,b,k,t,!0),!i.o.equals(t.enuCenter,i.o.ZERO)){var P=new Array(m);for(v=0;v<m;v++)P[v]=i.o.clone(h[v]);_.combinedLocalPositions=s.J.computeLocalPositions(P,b,k,t,!0,t.enuCenter)}return function(t,n,o,i){var s=t.combinedPositions,p=t.combinedLocalPositions,h=new c.a;i.position&&(h.position=new l.o({componentDatatype:a.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:s}));var m,f,v,b,k,_,P=n.length,L=s.length/3,w=(L-2*P)/(2*P),C=y.A.triangulate(n),E=(w-1)*P*6+2*C.length,A=d.IndexDatatype.createTypedArray(L,E),D=2*P,T=0;for(m=0;m<w-1;m++){for(f=0;f<P-1;f++)_=(v=2*f+m*P*2)+D,k=(b=v+1)+D,A[T++]=b,A[T++]=v,A[T++]=k,A[T++]=k,A[T++]=v,A[T++]=_;k=(b=1+(v=2*P-2+m*P*2))+D,_=v+D,A[T++]=b,A[T++]=v,A[T++]=k,A[T++]=k,A[T++]=v,A[T++]=_}if(i.st||i.tangent||i.bitangent){var F,G,R=new Float32Array(2*L),x=1/(w-1),O=1/o.height,I=o.height/2,S=0;for(m=0;m<w;m++){for(F=m*x,G=O*(n[0].y+I),R[S++]=F,R[S++]=G,f=1;f<P;f++)G=O*(n[f].y+I),R[S++]=F,R[S++]=G,R[S++]=F,R[S++]=G;G=O*(n[0].y+I),R[S++]=F,R[S++]=G}for(f=0;f<P;f++)F=0,G=O*(n[f].y+I),R[S++]=F,R[S++]=G;for(f=0;f<P;f++)F=(w-1)*x,G=O*(n[f].y+I),R[S++]=F,R[S++]=G;h.st=new l.o({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:new Float32Array(R)})}var q=L-2*P;for(m=0;m<C.length;m+=3){var N=C[m]+q,U=C[m+1]+q,W=C[m+2]+q;A[T++]=N,A[T++]=U,A[T++]=W,A[T++]=W+P,A[T++]=U+P,A[T++]=N+P}var B=new l.I({attributes:h,indices:A,boundingSphere:r.i.fromVertices(s),primitiveType:g._0x2355b9.TRIANGLES});if(i.normal&&(B=u.k.computeNormal(B)),i.tangent||i.bitangent){try{B=u.k.computeTangentAndBitangent(B)}catch{r.e("polyline-volume-tangent-bitangent","Unable to compute tangents and bitangents for polyline volume geometry")}i.tangent||(B.attributes.tangent=void 0),i.bitangent||(B.attributes.bitangent=void 0),i.st||(B.attributes.st=void 0)}return e.e(p)&&(B.attributes.position.values=p,B.attributes.position.componentDatatype=a.ComponentDatatype.FLOAT),B}(_,b,k,t._vertexFormat)}},function(n,o){return e.e(o)&&(n=T.unpack(n,o)),n._ellipsoid=t.t.clone(n._ellipsoid),T.createGeometry(n)}}));
