define(["./when-92c6cf3c","./Cartesian2-b72655a5","./arrayRemoveDuplicates-a6924649","./BoundingRectangle-da275698","./buildModuleUrl-85cd08bf","./Cartesian3-3a8bdb0b","./ComponentDatatype-98414d16","./PolylineVolumeGeometryLibrary-14490c01","./Check-52a7d806","./GeometryAttribute-ba5053ae","./GeometryAttributes-7f66ea53","./GeometryPipeline-47bffd4f","./IndexDatatype-86677ec4","./Math-ecf82623","./PolygonPipeline-d1fe7cef","./FeatureDetection-6dd694bf","./VertexFormat-f496a3f1","./Cartographic-a2c313d7","./Event-3390cd7d","./RuntimeError-c6a62a80","./WebGLConstants-42651efd","./Cartesian4-72b88c9e","./EllipsoidTangentPlane-40dff6cc","./IntersectionTests-37c278d3","./Plane-70a63ea4","./PolylinePipeline-6838748d","./EllipsoidGeodesic-03c935a0","./EllipsoidRhumbLine-b1a766ae","./AttributeCompression-b5a80a71","./EncodedCartesian3-4f120b1b"],(function(e,t,n,o,a,r,i,s,p,c,l,u,d,h,y,g,f,m,v,b,k,_,P,L,w,C,E,A,D,T){"use strict";function F(n){var o=(n=e.u(n,e.u.EMPTY_OBJECT)).polylinePositions,a=n.shapePositions;if(!e.e(o))throw new p.t("options.polylinePositions is required.");if(!e.e(a))throw new p.t("options.shapePositions is required.");this._positions=o,this._shape=a,this._ellipsoid=t.t.clone(e.u(n.ellipsoid,t.t.WGS84)),this._cornerType=e.u(n.cornerType,s.S.ROUNDED),this._vertexFormat=f.n.clone(e.u(n.vertexFormat,f.n.DEFAULT)),this._granularity=e.u(n.granularity,h.e.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeGeometry",this.enuCenter=e.u(n.enuCenter,r.o.ZERO);var i=1+o.length*r.o.packedLength;i+=1+a.length*t.o.packedLength+r.o.packedLength,this.packedLength=i+t.t.packedLength+f.n.packedLength+2}F.pack=function(n,o,a){if(!e.e(n))throw new p.t("value is required");if(!e.e(o))throw new p.t("array is required");a=e.u(a,0);var i,s=n._positions,c=s.length;for(o[a++]=c,i=0;i<c;++i,a+=r.o.packedLength)r.o.pack(s[i],o,a);var l=n._shape;for(c=l.length,o[a++]=c,i=0;i<c;++i,a+=t.o.packedLength)t.o.pack(l[i],o,a);return t.t.pack(n._ellipsoid,o,a),a+=t.t.packedLength,f.n.pack(n._vertexFormat,o,a),a+=f.n.packedLength,o[a++]=n._cornerType,o[a++]=n._granularity,r.o.pack(n.enuCenter,o,a),o};var G=t.t.clone(t.t.UNIT_SPHERE),R=new f.n,x={polylinePositions:void 0,shapePositions:void 0,ellipsoid:G,vertexFormat:R,cornerType:void 0,granularity:void 0,enuCenter:void 0};F.unpack=function(n,o,a){if(!e.e(n))throw new p.t("array is required");o=e.u(o,0);var i,s=n[o++],c=new Array(s);for(i=0;i<s;++i,o+=r.o.packedLength)c[i]=r.o.unpack(n,o);s=n[o++];var l=new Array(s);for(i=0;i<s;++i,o+=t.o.packedLength)l[i]=t.o.unpack(n,o);var u=t.t.unpack(n,o,G);o+=t.t.packedLength;var d=f.n.unpack(n,o,R);o+=f.n.packedLength;var h,y=n[o++],g=n[o++];return h=r.o.unpack(n,o),e.e(a)?(a._positions=c,a._shape=l,a._ellipsoid=t.t.clone(u,a._ellipsoid),a._vertexFormat=f.n.clone(d,a._vertexFormat),a._cornerType=y,a._granularity=g,a.enuCenter=h,a):(x.polylinePositions=c,x.shapePositions=l,x.cornerType=y,x.granularity=g,x.enuCenter=h,new F(x))};var O=new o.f;return F.createGeometry=function(t){for(var p=t._positions,h=n.D(p,r.o.equalsEpsilon),f=h.length,m=new Array(f),v=0;v<f;v++)m[v]=r.o.clone(h[v]);var b=t._shape;if(b=s.J.removeDuplicatesFromShape(b),!(h.length<2||b.length<3)){y.A.computeWindingOrder2D(b)===y.W.CLOCKWISE&&b.reverse();var k=o.f.fromPoints(b,O),_={};if(_.combinedPositions=s.J.computePositions(m,b,k,t,!0),!r.o.equals(t.enuCenter,r.o.ZERO)){var P=new Array(f);for(v=0;v<f;v++)P[v]=r.o.clone(h[v]);_.combinedLocalPositions=s.J.computeLocalPositions(P,b,k,t,!0,t.enuCenter)}return function(t,n,o,r){var s=t.combinedPositions,p=t.combinedLocalPositions,h=new l.a;r.position&&(h.position=new c.o({componentDatatype:i.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:s}));var f,m,v,b,k,_,P=n.length,L=s.length/3,w=(L-2*P)/(2*P),C=y.A.triangulate(n),E=(w-1)*P*6+2*C.length,A=d.IndexDatatype.createTypedArray(L,E),D=2*P,T=0;for(f=0;f<w-1;f++){for(m=0;m<P-1;m++)_=(v=2*m+f*P*2)+D,k=(b=v+1)+D,A[T++]=b,A[T++]=v,A[T++]=k,A[T++]=k,A[T++]=v,A[T++]=_;k=(b=1+(v=2*P-2+f*P*2))+D,_=v+D,A[T++]=b,A[T++]=v,A[T++]=k,A[T++]=k,A[T++]=v,A[T++]=_}if(r.st||r.tangent||r.bitangent){var F,G,R=new Float32Array(2*L),x=1/(w-1),O=1/o.height,I=o.height/2,S=0;for(f=0;f<w;f++){for(F=f*x,G=O*(n[0].y+I),R[S++]=F,R[S++]=G,m=1;m<P;m++)G=O*(n[m].y+I),R[S++]=F,R[S++]=G,R[S++]=F,R[S++]=G;G=O*(n[0].y+I),R[S++]=F,R[S++]=G}for(m=0;m<P;m++)F=0,G=O*(n[m].y+I),R[S++]=F,R[S++]=G;for(m=0;m<P;m++)F=(w-1)*x,G=O*(n[m].y+I),R[S++]=F,R[S++]=G;h.st=new c.o({componentDatatype:i.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:new Float32Array(R)})}var q=L-2*P;for(f=0;f<C.length;f+=3){var N=C[f]+q,U=C[f+1]+q,W=C[f+2]+q;A[T++]=N,A[T++]=U,A[T++]=W,A[T++]=W+P,A[T++]=U+P,A[T++]=N+P}var B=new c.I({attributes:h,indices:A,boundingSphere:a.i.fromVertices(s),primitiveType:g._0x3202e1.TRIANGLES});if(r.normal&&(B=u.k.computeNormal(B)),r.tangent||r.bitangent){try{B=u.k.computeTangentAndBitangent(B)}catch{a.e("polyline-volume-tangent-bitangent","Unable to compute tangents and bitangents for polyline volume geometry")}r.tangent||(B.attributes.tangent=void 0),r.bitangent||(B.attributes.bitangent=void 0),r.st||(B.attributes.st=void 0)}return e.e(p)&&(B.attributes.position.values=p,B.attributes.position.componentDatatype=i.ComponentDatatype.FLOAT),B}(_,b,k,t._vertexFormat)}},function(n,o){return e.e(o)&&(n=F.unpack(n,o)),n._ellipsoid=t.t.clone(n._ellipsoid),F.createGeometry(n)}}));
