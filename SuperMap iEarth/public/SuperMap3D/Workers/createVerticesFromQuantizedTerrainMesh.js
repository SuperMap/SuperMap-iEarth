define(["./AttributeCompression-b5a80a71","./EllipsoidTangentPlane-d6b88a1f","./buildModuleUrl-9eef8841","./Cartesian2-b72655a5","./Cartesian3-3a8bdb0b","./Cartographic-a2c313d7","./when-92c6cf3c","./TerrainEncoding-fd44afa8","./IndexDatatype-86677ec4","./Math-ecf82623","./FeatureDetection-cec0163f","./OrientedBoundingBox-d2eb0b92","./Check-52a7d806","./GeometryAttribute-f47bd1cb","./WebMercatorProjection-ee891935","./createTaskProcessorWorker","./Cartesian4-72b88c9e","./IntersectionTests-6e80d61c","./Plane-33393da8","./Event-3390cd7d","./RuntimeError-c6a62a80","./ComponentDatatype-98414d16","./WebGLConstants-42651efd","./PolygonPipeline-425528b3","./EllipsoidRhumbLine-b1a766ae"],(function(e,t,r,n,i,o,a,s,h,c,d,u,I,l,m,g,T,f,v,y,p,w,E,N,b){"use strict";function S(){I.t.throwInstantiationError()}Object.defineProperties(S.prototype,{errorEvent:{get:I.t.throwInstantiationError},credit:{get:I.t.throwInstantiationError},tilingScheme:{get:I.t.throwInstantiationError},ready:{get:I.t.throwInstantiationError},readyPromise:{get:I.t.throwInstantiationError},hasWaterMask:{get:I.t.throwInstantiationError},hasVertexNormals:{get:I.t.throwInstantiationError},availability:{get:I.t.throwInstantiationError}});var A=[];S.getRegularGridIndices=function(e,t){if(e*t>=c.e.FOUR_GIGABYTES)throw new I.t("The total number of vertices (width * height) must be less than 4,294,967,296.");var r=A[e];a.e(r)||(A[e]=r=[]);var n=r[t];return a.e(n)||M(e,t,n=e*t<c.e.SIXTY_FOUR_KILOBYTES?r[t]=new Uint16Array((e-1)*(t-1)*6+3*(e+t-2)):r[t]=new Uint32Array((e-1)*(t-1)*6+3*(e+t-2)),0),n},S.getRegularGridIndicesForReproject=function(e,t){if(e*t>=c.e.FOUR_GIGABYTES)throw new I.t("The total number of vertices (width * height) must be less than 4,294,967,296.");var r=A[e];a.e(r)||(A[e]=r=[]);var n=r[t];return a.e(n)||M(e,t,n=e*t<c.e.SIXTY_FOUR_KILOBYTES?r[t]=new Uint16Array((e-1)*(t-1)*6):r[t]=new Uint32Array((e-1)*(t-1)*6),0),n};var x=[];S.getRegularGridIndicesAndEdgeIndices=function(e,t){if(e*t>=c.e.FOUR_GIGABYTES)throw new I.t("The total number of vertices (width * height) must be less than 4,294,967,296.");var r=x[e];a.e(r)||(x[e]=r=[]);var n=r[t];if(!a.e(n)){var i=S.getRegularGridIndices(e,t),o=F(e,t),s=o.westIndicesSouthToNorth,h=o.southIndicesEastToWest,d=o.eastIndicesNorthToSouth,u=o.northIndicesWestToEast;n=r[t]={indices:i,westIndicesSouthToNorth:s,southIndicesEastToWest:h,eastIndicesNorthToSouth:d,northIndicesWestToEast:u}}return n};var _=[];function F(e,t){var r,n=new Array(t),i=new Array(e),o=new Array(t),a=new Array(e);for(r=0;r<e;++r)a[r]=r,i[r]=e*t-1-r;for(r=0;r<t;++r)o[r]=(r+1)*e-1,n[r]=(t-r-1)*e;return{westIndicesSouthToNorth:n,southIndicesEastToWest:i,eastIndicesNorthToSouth:o,northIndicesWestToEast:a}}function M(e,t,r,n){for(var i=0,o=0;o<t-1;++o){for(var a=0;a<e-1;++a){var s=i,h=s+e,c=h+1,d=s+1;r[n++]=s,r[n++]=h,r[n++]=d,r[n++]=d,r[n++]=h,r[n++]=c,++i}++i}var u=(t-1)/2,I=(e-1)/2;i=0;for(a=0;a<I;a++)r[n++]=i,r[n++]=i+1,r[n++]=i+2,i+=2;i=e*(t-1);for(a=0;a<I;a++)r[n++]=i+1,r[n++]=i,r[n++]=i+2,i+=2;i=0;for(a=0;a<u;a++)r[n++]=i+e,r[n++]=i,r[n++]=i+2*e,i+=2*e;i=e-1;for(a=0;a<u;a++)r[n++]=i,r[n++]=i+e,r[n++]=i+2*e,i+=2*e}function P(e,t,r,n,i){for(var o=a.e(i),s=e[0],h=e.length,c=1;c<h;++c){var d=e[c];!o||i[s+"_"+d]?(r[n++]=s,r[n++]=d,r[n++]=t,r[n++]=t,r[n++]=d,r[n++]=t+1,s=d,++t):(s=d,++t)}return n}S.getRegularGridAndSkirtIndicesAndEdgeIndices=function(e,t){if(e*t>=c.e.FOUR_GIGABYTES)throw new I.t("The total number of vertices (width * height) must be less than 4,294,967,296.");var r=_[e];a.e(r)||(_[e]=r=[]);var n=r[t];if(!a.e(n)){var i=e*t,o=(e-1)*(t-1)*6,s=2*e+2*t,d=i+s,u=3*(e+t-2),l=o+6*Math.max(0,s-4)+u,m=F(e,t),g=m.westIndicesSouthToNorth,T=m.southIndicesEastToWest,f=m.eastIndicesNorthToSouth,v=m.northIndicesWestToEast,y=h.IndexDatatype.createTypedArray(d,l);M(e,t,y,0),S.addSkirtIndices(g,T,f,v,i,y,o+u),n=r[t]={indices:y,westIndicesSouthToNorth:g,southIndicesEastToWest:T,eastIndicesNorthToSouth:f,northIndicesWestToEast:v,indexCountWithoutSkirts:o}}return n},S.addSkirtIndices=function(e,t,r,n,i,o,a,s){var h=i;a=P(e,h,o,a,s),a=P(t,h+=e.length,o,a,s),a=P(r,h+=t.length,o,a,s),P(n,h+=r.length,o,a,s)},S.heightmapTerrainQuality=.25,S.getEstimatedLevelZeroGeometricErrorForAHeightmap=function(e,t,r){return 2*e.maximumRadius*Math.PI*S.heightmapTerrainQuality/(t*r)},S.prototype.requestTileGeometry=I.t.throwInstantiationError,S.prototype.getLevelMaximumGeometricError=I.t.throwInstantiationError,S.prototype.getTileDataAvailable=I.t.throwInstantiationError,S.prototype.loadTileDataAvailability=I.t.throwInstantiationError;var G=32767,B=new i.o,W=new i.o,C=new i.o,O=new o.a,Y=new n.o,k=new i.o,H=new d.p,R=new d.p;function V(e,t,r,n,o,a,s,h,u){var I=Number.POSITIVE_INFINITY,l=o.north,m=o.south,g=o.east,T=o.west;g<T&&(g+=c.e.TWO_PI);for(var f=e.length,v=0;v<f;++v){var y=e[v],p=r[y],w=n[y];O.longitude=c.e.lerp(T,g,w.x),O.latitude=c.e.lerp(m,l,w.y),O.height=p-t;var E=a.cartographicToCartesian(O,B);d.p.multiplyByPoint(s,E,E),i.o.minimumByComponent(E,h,h),i.o.maximumByComponent(E,u,u),I=Math.min(I,O.height)}return I}function U(t,r,n,o,s,h,u,I,g,T,f,v,y,p,w){var E=a.e(u),N=g.north,b=g.south,S=g.east,A=g.west;S<A&&(S+=c.e.TWO_PI);for(var x=n.length,_=0;_<x;++_){var F=n[_],M=s[F],P=h[F];O.longitude=c.e.lerp(A,S,P.x)+p,O.latitude=c.e.lerp(b,N,P.y)+w,O.height=M-T;var G,W=I.cartographicToCartesian(O,B);if(E){var C=2*F;if(Y.x=u[C],Y.y=u[C+1],1!==f){var V=e.t.octDecode(Y.x,Y.y,k),U=l.m.eastNorthUpToFixedFrame(B,I,R),z=d.p.inverseTransformation(U,H);d.p.multiplyByPointAsVector(z,V,V),V.z*=f,i.o.normalize(V,V),d.p.multiplyByPointAsVector(U,V,V),i.o.normalize(V,V),e.t.octEncode(V,Y)}}o.hasWebMercatorT&&(G=(m.t.geodeticLatitudeToMercatorAngle(O.latitude)-v)*y),r=o.encode(t,r,W,P,O.height,Y,G)}}function z(e,t){var r;return"function"==typeof e.slice&&"function"!=typeof(r=e.slice()).sort&&(r=void 0),a.e(r)||(r=Array.prototype.slice.call(e)),r.sort(t),r}var L=g((function(o,I){var g,T,f=o.quantizedVertices,v=f.length/3,y=o.octEncodedNormals,p=o.westIndices.length+o.eastIndices.length+o.southIndices.length+o.northIndices.length,w=o.includeWebMercatorT,E=n.h.clone(o.rectangle),N=E.west,b=E.south,A=E.east,x=E.north,_=n.t.clone(o.ellipsoid),F=o.exaggeration,M=o.minimumHeight*F,P=o.maximumHeight*F,L=a.e(o.validMinimumHeight)?o.validMinimumHeight*F:M*F,D=a.e(o.validMaximumHeight)?o.validMaximumHeight*F:P*F,j=o.relativeToCenter,q=l.m.eastNorthUpToFixedFrame(j,_),K=d.p.inverseTransformation(q,new d.p);w&&(g=m.t.geodeticLatitudeToMercatorAngle(b),T=1/(m.t.geodeticLatitudeToMercatorAngle(x)-g));var Q=f.subarray(0,v),X=f.subarray(v,2*v),Z=f.subarray(2*v,3*v),J=a.e(y),$=new Array(v),ee=new Array(v),te=new Array(v),re=w?new Array(v):[],ne=W;ne.x=Number.POSITIVE_INFINITY,ne.y=Number.POSITIVE_INFINITY,ne.z=Number.POSITIVE_INFINITY;var ie=C;ie.x=Number.NEGATIVE_INFINITY,ie.y=Number.NEGATIVE_INFINITY,ie.z=Number.NEGATIVE_INFINITY;for(var oe=Number.POSITIVE_INFINITY,ae=Number.NEGATIVE_INFINITY,se=Number.POSITIVE_INFINITY,he=Number.NEGATIVE_INFINITY,ce=0;ce<v;++ce){var de=Q[ce],ue=X[ce],Ie=de/G,le=ue/G,me=c.e.lerp(M,P,Z[ce]/G);O.longitude=c.e.lerp(N,A,Ie),O.latitude=c.e.lerp(b,x,le),O.height=me,oe=Math.min(O.longitude,oe),ae=Math.max(O.longitude,ae),se=Math.min(O.latitude,se),he=Math.max(O.latitude,he);var ge=_.cartographicToCartesian(O);$[ce]=new n.o(Ie,le),ee[ce]=me,te[ce]=ge,w&&(re[ce]=(m.t.geodeticLatitudeToMercatorAngle(O.latitude)-g)*T),d.p.multiplyByPoint(K,ge,B),i.o.minimumByComponent(B,ne,ne),i.o.maximumByComponent(B,ie,ie)}var Te,fe,ve=z(o.westIndices,(function(e,t){return $[e].y-$[t].y})),ye=z(o.eastIndices,(function(e,t){return $[t].y-$[e].y})),pe=z(o.southIndices,(function(e,t){return $[t].x-$[e].x})),we=z(o.northIndices,(function(e,t){return $[e].x-$[t].x}));fe=r.i.fromPoints(te),Te=u.y.fromRectangle(E,M,P,_);var Ee,Ne=u.y.fromRectangle(E,L,D,_);(1!==F||M<0)&&(Ee=new s.s(_).computeHorizonCullingPointPossiblyUnderEllipsoid(j,te,M));var be=M;be=Math.min(be,V(o.westIndices,o.westSkirtHeight,ee,$,E,_,K,ne,ie)),be=Math.min(be,V(o.southIndices,o.southSkirtHeight,ee,$,E,_,K,ne,ie)),be=Math.min(be,V(o.eastIndices,o.eastSkirtHeight,ee,$,E,_,K,ne,ie)),be=Math.min(be,V(o.northIndices,o.northSkirtHeight,ee,$,E,_,K,ne,ie));for(var Se=new t.e(ne,ie,j),Ae=new s.h(Se,be,P,q,J,w),xe=Ae.getStride(),_e=new Float32Array(v*xe+p*xe),Fe=0,Me=0;Me<v;++Me){if(J){var Pe=2*Me;if(Y.x=y[Pe],Y.y=y[Pe+1],1!==F){var Ge=e.t.octDecode(Y.x,Y.y,k),Be=l.m.eastNorthUpToFixedFrame(te[Me],_,R),We=d.p.inverseTransformation(Be,H);d.p.multiplyByPointAsVector(We,Ge,Ge),Ge.z*=F,i.o.normalize(Ge,Ge),d.p.multiplyByPointAsVector(Be,Ge,Ge),i.o.normalize(Ge,Ge),e.t.octEncode(Ge,Y)}}Fe=Ae.encode(_e,Fe,te[Me],$[Me],ee[Me],Y,re[Me])}var Ce=Math.max(0,2*(p-4)),Oe=o.indices.length+3*Ce,Ye=h.IndexDatatype.createTypedArray(v+p,Oe);Ye.set(o.indices,0);var ke=1e-4,He=(ae-oe)*ke,Re=(he-se)*ke,Ve=-He,Ue=He,ze=Re,Le=-Re,De=v*xe;U(_e,De,ve,Ae,ee,$,y,_,E,o.westSkirtHeight,F,g,T,Ve,0),U(_e,De+=o.westIndices.length*xe,pe,Ae,ee,$,y,_,E,o.southSkirtHeight,F,g,T,0,Le),U(_e,De+=o.southIndices.length*xe,ye,Ae,ee,$,y,_,E,o.eastSkirtHeight,F,g,T,Ue,0),U(_e,De+=o.eastIndices.length*xe,we,Ae,ee,$,y,_,E,o.northSkirtHeight,F,g,T,0,ze);var je=function(e,t,r,n){if(n<12)return;for(var i={},o=e.length,a=0;a<o;a+=3){var s=e[a],h=e[a+1],c=e[a+2];(t[s]===G&&t[h]===G||0===t[s]&&0===t[h]||r[s]===G&&r[h]===G||0===r[s]&&0===r[h])&&(i[s+"_"+h]=1,i[h+"_"+s]=1),(t[h]===G&&t[c]===G||0===t[h]&&0===t[c]||r[h]===G&&r[c]===G||0===r[h]&&0===r[c])&&(i[h+"_"+c]=1,i[c+"_"+h]=1),(t[c]===G&&t[s]===G||0===t[c]&&0===t[s]||r[c]===G&&r[s]===G||0===r[c]&&0===r[s])&&(i[c+"_"+s]=1,i[s+"_"+c]=1)}return i}(o.indices,Q,X,o.level);return S.addSkirtIndices(ve,pe,ye,we,v,Ye,o.indices.length,je),I.push(_e.buffer,Ye.buffer),{vertices:_e.buffer,indices:Ye.buffer,westIndicesSouthToNorth:ve,southIndicesEastToWest:pe,eastIndicesNorthToSouth:ye,northIndicesWestToEast:we,vertexStride:xe,center:j,minimumHeight:M,maximumHeight:P,boundingSphere:fe,orientedBoundingBox:Te,validOrientedBoundingBox:Ne,occludeePointInScaledSpace:Ee,encoding:Ae,indexCountWithoutSkirts:o.indices.length}}));return L}));
