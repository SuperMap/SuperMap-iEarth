define(["./EllipsoidTangentPlane-396aeb10","./buildModuleUrl-caba6be5","./Cartesian2-b72655a5","./Cartesian3-3a8bdb0b","./Cartographic-a2c313d7","./when-92c6cf3c","./TerrainEncoding-967b6266","./Math-ecf82623","./FeatureDetection-9827a02d","./OrientedBoundingBox-d4e18f2c","./RuntimeError-c6a62a80","./GeometryAttribute-1689f5ef","./WebMercatorProjection-ee891935","./createTaskProcessorWorker","./Check-52a7d806","./Cartesian4-72b88c9e","./IntersectionTests-672dbf40","./Plane-3f69b850","./Event-3390cd7d","./AttributeCompression-b5a80a71","./ComponentDatatype-98414d16","./WebGLConstants-42651efd","./PolygonPipeline-2a0dc978","./EllipsoidRhumbLine-b1a766ae"],(function(e,t,n,i,r,a,o,u,s,c,d,h,l,g,m,p,v,I,E,T,f,b,N,x){"use strict";var S=Uint16Array.BYTES_PER_ELEMENT,w=Int32Array.BYTES_PER_ELEMENT,P=Uint32Array.BYTES_PER_ELEMENT,y=Float32Array.BYTES_PER_ELEMENT,A=Float64Array.BYTES_PER_ELEMENT;function M(e,t,n){n=a.u(n,u.e);for(var i=e.length,r=0;r<i;++r)if(n.equalsEpsilon(e[r],t,u.e.EPSILON12))return r;return-1}var R=new r.a,B=new i.o,C=new i.o,_=new i.o,F=new s.p;function W(e,t,o,c,d,h,l,g,m,p){for(var v=l.length,I=0;I<v;++I){var E=l[I],T=E.cartographic,f=E.index,b=e.length,N=T.longitude,x=T.latitude;x=u.e.clamp(x,-u.e.PI_OVER_TWO,u.e.PI_OVER_TWO);var S=T.height-h.skirtHeight;h.hMin=Math.min(h.hMin,S),r.a.fromRadians(N,x,S,R),m&&(R.longitude+=g),m?I===v-1?R.latitude+=p:0===I&&(R.latitude-=p):R.latitude+=g;var w=h.ellipsoid.cartographicToCartesian(R);e.push(w),t.push(S),o.push(n.o.clone(o[f])),c.length>0&&c.push(c[f]),s.p.multiplyByPoint(h.toENU,w,B);var P=h.minimum,y=h.maximum;i.o.minimumByComponent(B,P,P),i.o.maximumByComponent(B,y,y);var A=h.lastBorderPoint;if(a.e(A)){var M=A.index;d.push(M,b-1,b,b,f,M)}h.lastBorderPoint=E}}return g((function(g,m){g.ellipsoid=n.t.clone(g.ellipsoid),g.rectangle=n.h.clone(g.rectangle);var p=function(g,m,p,v,I,E,T,f,b,N){var x,U,Y,k,L,O;a.e(v)?(x=v.west,U=v.south,Y=v.east,k=v.north,L=v.width,O=v.height):(x=u.e.toRadians(I.west),U=u.e.toRadians(I.south),Y=u.e.toRadians(I.east),k=u.e.toRadians(I.north),L=u.e.toRadians(v.width),O=u.e.toRadians(v.height));var V,H,D=[U,k],G=[x,Y],z=h.m.eastNorthUpToFixedFrame(m,p),j=s.p.inverseTransformation(z,F);f&&(V=l.t.geodeticLatitudeToMercatorAngle(U),H=1/(l.t.geodeticLatitudeToMercatorAngle(k)-V));var q=new DataView(g),J=Number.POSITIVE_INFINITY,K=Number.NEGATIVE_INFINITY,Q=C;Q.x=Number.POSITIVE_INFINITY,Q.y=Number.POSITIVE_INFINITY,Q.z=Number.POSITIVE_INFINITY;var X=_;X.x=Number.NEGATIVE_INFINITY,X.y=Number.NEGATIVE_INFINITY,X.z=Number.NEGATIVE_INFINITY;var Z,$,ee=0,te=0,ne=0;for($=0;$<4;++$){var ie=ee;Z=q.getUint32(ie,!0),ie+=P;var re=u.e.toRadians(180*q.getFloat64(ie,!0));ie+=A,-1===M(G,re)&&G.push(re);var ae=u.e.toRadians(180*q.getFloat64(ie,!0));ie+=A,-1===M(D,ae)&&D.push(ae),ie+=2*A;var oe=q.getInt32(ie,!0);ie+=w,te+=oe,ne+=3*(oe=q.getInt32(ie,!0)),ee+=Z+P}var ue=[],se=[],ce=new Array(te),de=new Array(te),he=new Array(te),le=f?new Array(te):[],ge=new Array(ne),me=[],pe=[],ve=[],Ie=[],Ee=0,Te=0;for(ee=0,$=0;$<4;++$){Z=q.getUint32(ee,!0);var fe=ee+=P,be=u.e.toRadians(180*q.getFloat64(ee,!0));ee+=A;var Ne=u.e.toRadians(180*q.getFloat64(ee,!0));ee+=A;var xe=u.e.toRadians(180*q.getFloat64(ee,!0)),Se=.5*xe;ee+=A;var we=u.e.toRadians(180*q.getFloat64(ee,!0)),Pe=.5*we;ee+=A;var ye=q.getInt32(ee,!0);ee+=w;var Ae=q.getInt32(ee,!0);ee+=w,ee+=w;for(var Me=new Array(ye),Re=0;Re<ye;++Re){var Be=be+q.getUint8(ee++)*xe;R.longitude=Be;var Ce=Ne+q.getUint8(ee++)*we;R.latitude=Ce;var _e=q.getFloat32(ee,!0);if(ee+=y,0!==_e&&_e<N&&(_e*=-Math.pow(2,b)),_e*=6371010*E,R.height=_e,-1!==M(G,Be)||-1!==M(D,Ce)){var Fe=M(ue,R,r.a);if(-1!==Fe){Me[Re]=se[Fe];continue}ue.push(r.a.clone(R)),se.push(Ee)}Me[Re]=Ee,Math.abs(Be-x)<Se?me.push({index:Ee,cartographic:r.a.clone(R)}):Math.abs(Be-Y)<Se?ve.push({index:Ee,cartographic:r.a.clone(R)}):Math.abs(Ce-U)<Pe?pe.push({index:Ee,cartographic:r.a.clone(R)}):Math.abs(Ce-k)<Pe&&Ie.push({index:Ee,cartographic:r.a.clone(R)}),J=Math.min(_e,J),K=Math.max(_e,K),he[Ee]=_e;var We=p.cartographicToCartesian(R);ce[Ee]=We,f&&(le[Ee]=(l.t.geodeticLatitudeToMercatorAngle(Ce)-V)*H),s.p.multiplyByPoint(j,We,B),i.o.minimumByComponent(B,Q,Q),i.o.maximumByComponent(B,X,X);var Ue=(Be-x)/(Y-x);Ue=u.e.clamp(Ue,0,1);var Ye=(Ce-U)/(k-U);Ye=u.e.clamp(Ye,0,1),de[Ee]=new n.o(Ue,Ye),++Ee}for(var ke=3*Ae,Le=0;Le<ke;++Le,++Te)ge[Te]=Me[q.getUint16(ee,!0)],ee+=S;if(Z!==ee-fe)throw new d.t("Invalid terrain tile.")}ce.length=Ee,de.length=Ee,he.length=Ee,f&&(le.length=Ee);var Oe=Ee,Ve=Te,He={hMin:J,lastBorderPoint:void 0,skirtHeight:T,toENU:j,ellipsoid:p,minimum:Q,maximum:X};me.sort((function(e,t){return t.cartographic.latitude-e.cartographic.latitude})),pe.sort((function(e,t){return e.cartographic.longitude-t.cartographic.longitude})),ve.sort((function(e,t){return e.cartographic.latitude-t.cartographic.latitude})),Ie.sort((function(e,t){return t.cartographic.longitude-e.cartographic.longitude}));var De=1e-5;if(W(ce,he,de,le,ge,He,me,-De*L,!0,-De*O),W(ce,he,de,le,ge,He,pe,-De*O,!1),W(ce,he,de,le,ge,He,ve,De*L,!0,De*O),W(ce,he,de,le,ge,He,Ie,De*O,!1),me.length>0&&Ie.length>0){var Ge=me[0].index,ze=Oe,je=Ie[Ie.length-1].index,qe=ce.length-1;ge.push(je,qe,ze,ze,Ge,je)}te=ce.length;var Je,Ke=t.i.fromPoints(ce);a.e(v)&&(Je=c.y.fromRectangle(v,J,K,p));for(var Qe=new o.s(p).computeHorizonCullingPointPossiblyUnderEllipsoid(m,ce,J),Xe=new e.e(Q,X,m),Ze=new o.h(Xe,He.hMin,K,z,!1,f),$e=new Float32Array(te*Ze.getStride()),et=0,tt=0;tt<te;++tt)et=Ze.encode($e,et,ce[tt],de[tt],he[tt],void 0,le[tt]);var nt=me.map((function(e){return e.index})).reverse(),it=pe.map((function(e){return e.index})).reverse(),rt=ve.map((function(e){return e.index})).reverse(),at=Ie.map((function(e){return e.index})).reverse();return it.unshift(rt[rt.length-1]),it.push(nt[0]),at.unshift(nt[nt.length-1]),at.push(rt[0]),{vertices:$e,indices:new Uint16Array(ge),maximumHeight:K,minimumHeight:J,encoding:Ze,boundingSphere3D:Ke,orientedBoundingBox:Je,occludeePointInScaledSpace:Qe,vertexCountWithoutSkirts:Oe,indexCountWithoutSkirts:Ve,westIndicesSouthToNorth:nt,southIndicesEastToWest:it,eastIndicesNorthToSouth:rt,northIndicesWestToEast:at}}(g.buffer,g.relativeToCenter,g.ellipsoid,g.rectangle,g.nativeRectangle,g.exaggeration,g.skirtHeight,g.includeWebMercatorT,g.negativeAltitudeExponentBias,g.negativeElevationThreshold),v=p.vertices;m.push(v.buffer);var I=p.indices;return m.push(I.buffer),{vertices:v.buffer,indices:I.buffer,numberOfAttributes:p.encoding.getStride(),minimumHeight:p.minimumHeight,maximumHeight:p.maximumHeight,boundingSphere3D:p.boundingSphere3D,orientedBoundingBox:p.orientedBoundingBox,occludeePointInScaledSpace:p.occludeePointInScaledSpace,encoding:p.encoding,vertexCountWithoutSkirts:p.vertexCountWithoutSkirts,indexCountWithoutSkirts:p.indexCountWithoutSkirts,westIndicesSouthToNorth:p.westIndicesSouthToNorth,southIndicesEastToWest:p.southIndicesEastToWest,eastIndicesNorthToSouth:p.eastIndicesNorthToSouth,northIndicesWestToEast:p.northIndicesWestToEast}}))}));
