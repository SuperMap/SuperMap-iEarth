define(["./when-92c6cf3c","./PrimitivePipeline-21bb3b56","./createTaskProcessorWorker","./buildModuleUrl-cbcc8c56","./Cartesian3-3a8bdb0b","./Check-52a7d806","./Math-ecf82623","./Cartographic-a2c313d7","./Cartesian2-b72655a5","./FeatureDetection-fd297af4","./Cartesian4-72b88c9e","./RuntimeError-c6a62a80","./WebGLConstants-42651efd","./Event-3390cd7d","./ComponentDatatype-98414d16","./GeometryAttribute-65cf868d","./GeometryAttributes-7f66ea53","./GeometryPipeline-50805727","./AttributeCompression-b5a80a71","./EncodedCartesian3-4f120b1b","./IndexDatatype-86677ec4","./IntersectionTests-9ff29c98","./Plane-a2c6da7b","./WebMercatorProjection-ee891935"],(function(e,r,t,a,n,o,c,i,s,u,b,f,d,l,m,p,C,y,k,v,P,h,G,W){"use strict";var A={};function g(r){var t=A[r];return e.e(t)||("object"==typeof exports?A[t]=t=require("Workers/"+r):require(["Workers/"+r],(function(e){A[t=e]=e}))),t}return t((function(t,a){for(var n=t.subTasks,o=n.length,c=new Array(o),i=0;i<o;i++){var s=n[i],u=s.geometry,b=s.moduleName;if(e.e(b)){var f=g(b);c[i]=f(u,s.offset)}else c[i]=u}return e.o.all(c,(function(e){return r.k.packCreateGeometryResults(e,a)}))}))}));
