import{a as g,b as W}from"./chunk-MPSLJKIO.js";import{a as G}from"./chunk-44AFRGCG.js";import{a as $}from"./chunk-UIA2BV6O.js";import{d as Q,k as Z,l as F}from"./chunk-CJHFPVIB.js";import{b as X}from"./chunk-SSYG2MIY.js";import{a as y}from"./chunk-SRPTWKHW.js";import{b as K}from"./chunk-7TOCOFC3.js";import{a as u}from"./chunk-LBR6REQR.js";import{a as D}from"./chunk-GXFCHGTA.js";import{a as s}from"./chunk-UBHQMGET.js";import{a as p}from"./chunk-PJGSCWXZ.js";import{a as R}from"./chunk-NUC3LT2W.js";var mi=new u(1,1,1),B=Math.cos,S=Math.sin;function x(r){r=s(r,s.EMPTY_OBJECT);var t=s(r.radii,mi),o=s(r.innerRadii,t),C=s(r.minimumClock,0),P=s(r.maximumClock,D.TWO_PI),h=s(r.minimumCone,0),k=s(r.maximumCone,D.PI),n=Math.round(s(r.stackPartitions,10)),w=Math.round(s(r.slicePartitions,8)),e=Math.round(s(r.subdivisions,128));if(n<1)throw new p("options.stackPartitions cannot be less than 1");if(w<0)throw new p("options.slicePartitions cannot be less than 0");if(e<0)throw new p("options.subdivisions must be greater than or equal to zero.");if(R(r.offsetAttribute)&&r.offsetAttribute===W.TOP)throw new p("GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry.");this._radii=u.clone(t),this._innerRadii=u.clone(o),this._minimumClock=C,this._maximumClock=P,this._minimumCone=h,this._maximumCone=k,this._stackPartitions=n,this._slicePartitions=w,this._subdivisions=e,this._offsetAttribute=r.offsetAttribute,this._workerName="createEllipsoidOutlineGeometry"}x.packedLength=2*u.packedLength+8;x.pack=function(r,t,o){if(!R(r))throw new p("value is required");if(!R(t))throw new p("array is required");return o=s(o,0),u.pack(r._radii,t,o),o+=u.packedLength,u.pack(r._innerRadii,t,o),o+=u.packedLength,t[o++]=r._minimumClock,t[o++]=r._maximumClock,t[o++]=r._minimumCone,t[o++]=r._maximumCone,t[o++]=r._stackPartitions,t[o++]=r._slicePartitions,t[o++]=r._subdivisions,t[o]=s(r._offsetAttribute,-1),t};var I=new u,ii=new u,b={radii:I,innerRadii:ii,minimumClock:void 0,maximumClock:void 0,minimumCone:void 0,maximumCone:void 0,stackPartitions:void 0,slicePartitions:void 0,subdivisions:void 0,offsetAttribute:void 0};x.unpack=function(r,t,o){if(!R(r))throw new p("array is required");t=s(t,0);var C=u.unpack(r,t,I);t+=u.packedLength;var P=u.unpack(r,t,ii);t+=u.packedLength;var h=r[t++],k=r[t++],n=r[t++],w=r[t++],e=r[t++],f=r[t++],T=r[t++],v=r[t];return R(o)?(o._radii=u.clone(C,o._radii),o._innerRadii=u.clone(P,o._innerRadii),o._minimumClock=h,o._maximumClock=k,o._minimumCone=n,o._maximumCone=w,o._stackPartitions=e,o._slicePartitions=f,o._subdivisions=T,o._offsetAttribute=v===-1?void 0:v,o):(b.minimumClock=h,b.maximumClock=k,b.minimumCone=n,b.maximumCone=w,b.stackPartitions=e,b.slicePartitions=f,b.subdivisions=T,b.offsetAttribute=v===-1?void 0:v,new x(b))};x.createGeometry=function(r){var t=r._radii;if(!(t.x<=0||t.y<=0||t.z<=0)){var o=r._innerRadii;if(!(o.x<=0||o.y<=0||o.z<=0)){var C=r._minimumClock,P=r._maximumClock,h=r._minimumCone,k=r._maximumCone,n=r._subdivisions,w=K.fromCartesian3(t),e=r._slicePartitions+1,f=r._stackPartitions+1;e=Math.round(e*Math.abs(P-C)/D.TWO_PI),f=Math.round(f*Math.abs(k-h)/D.PI),e<2&&(e=2),f<2&&(f=2);var T=0,v=1,L=o.x!==t.x||o.y!==t.y||o.z!==t.z,Y=!1,j=!1;L&&(v=2,h>0&&(Y=!0,T+=e),k<Math.PI&&(j=!0,T+=e));var q=n*v*(f+e),c=new Float64Array(q*3),ri=2*(q+T-(e+f)*v),d=G.createTypedArray(q,ri),i,m,E,z,a=0,_=new Array(f),A=new Array(f);for(i=0;i<f;i++)z=h+i*(k-h)/(f-1),_[i]=S(z),A[i]=B(z);var l=new Array(n),M=new Array(n);for(i=0;i<n;i++)E=C+i*(P-C)/(n-1),l[i]=S(E),M[i]=B(E);for(i=0;i<f;i++)for(m=0;m<n;m++)c[a++]=t.x*_[i]*M[m],c[a++]=t.y*_[i]*l[m],c[a++]=t.z*A[i];if(L)for(i=0;i<f;i++)for(m=0;m<n;m++)c[a++]=o.x*_[i]*M[m],c[a++]=o.y*_[i]*l[m],c[a++]=o.z*A[i];for(_.length=n,A.length=n,i=0;i<n;i++)z=h+i*(k-h)/(n-1),_[i]=S(z),A[i]=B(z);for(l.length=e,M.length=e,i=0;i<e;i++)E=C+i*(P-C)/(e-1),l[i]=S(E),M[i]=B(E);for(i=0;i<n;i++)for(m=0;m<e;m++)c[a++]=t.x*_[i]*M[m],c[a++]=t.y*_[i]*l[m],c[a++]=t.z*A[i];if(L)for(i=0;i<n;i++)for(m=0;m<e;m++)c[a++]=o.x*_[i]*M[m],c[a++]=o.y*_[i]*l[m],c[a++]=o.z*A[i];for(a=0,i=0;i<f*v;i++){var J=i*n;for(m=0;m<n-1;m++)d[a++]=J+m,d[a++]=J+m+1}var O=f*n*v;for(i=0;i<e;i++)for(m=0;m<n-1;m++)d[a++]=O+i+m*e,d[a++]=O+i+(m+1)*e;if(L)for(O=f*n*v+e*n,i=0;i<e;i++)for(m=0;m<n-1;m++)d[a++]=O+i+m*e,d[a++]=O+i+(m+1)*e;if(L){var N=f*n*v,U=N+n*e;if(Y)for(i=0;i<e;i++)d[a++]=N+i,d[a++]=U+i;if(j)for(N+=n*e-e,U+=n*e-e,i=0;i<e;i++)d[a++]=N+i,d[a++]=U+i}var V=new $({position:new F({componentDatatype:y.DOUBLE,componentsPerAttribute:3,values:c})});if(R(r._offsetAttribute)){var ti=c.length,H=new Uint8Array(ti/3),oi=r._offsetAttribute===W.NONE?0:1;g(H,oi),V.applyOffset=new F({componentDatatype:y.UNSIGNED_BYTE,componentsPerAttribute:1,values:H})}return new Z({attributes:V,indices:d,primitiveType:X.LINES,boundingSphere:Q.fromEllipsoid(w),offsetAttribute:r._offsetAttribute})}}};var Pi=x;export{Pi as a};
